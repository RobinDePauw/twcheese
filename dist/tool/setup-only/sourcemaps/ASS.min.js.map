{"version":3,"sources":["ASS.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","DebugEvents","PHASE_COMPLETION_READY","PHASE_COMPLETION_NOT_READY","PHASE_CHANGED","QUESTION_ANSWERED","QUESTION_NOT_ANSWERED","OPTION_VALUE_CHANGED","BUG_REPORT_SUCCEEDED","BUG_REPORT_FAILED","USER_REJECTED","Phase","[object Object]","phaseName","this","followsUpOn","autoComplete","thingToFollowUpOn","auto","Error","PhaseTypes","ATTEMPT","QUESTION","REPORT","ProcessFactory","_twcheese_src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__","_twcheese_src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__","_twcheese_src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__","_twcheese_src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__","lazyEvalUsingParent","parentPhase","str","parentResult","result","eval","actions","phaseFactory","cfg","finishWithReport","process","phaseCfg","phases","enqueuePhase","createPhase","bugReporter","lazyEval","phase","addFollowUpPhasesForSuccess","addFollowUpPhasesForAnswers","type","success","subPhase","addSuccessFollowUp","q","questionCfg","entries","questions","optionCfg","options","followUp","option","addFollowUp","DebugProcess","_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__","processName","currentPhaseIndex","push","watchPhase","splice","events","$","on","join","e","trigger","goToNextPhase","thing","getCurrentPhase","getThingsToFollowUpOn","followUpPhases","insertPhase","hasNextPhase","checkCompletionReady","start","length","slice","map","getSummary","PhaseReport","_twcheese_src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__","_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__","_twcheese_src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__","Status","SUCCESS","FAIL","NOT_ATTEMPTED","super","status","error","report","buildReport","submitReport","then","url","html_url","catch","finally","PhaseAttempt_PhaseAttempt","asyncFunctionToAttempt","instructions","attempt","async","fail","_error","_result","summarizeData","ctrl","successFollowUpPhases","abortableAttempt","err","console","warn","Promise","resolve","reject","func","cb","setFollowsUpOn","doAttempt","data","summarizeError","message","extra","stack","phaseNum","functionToAttempt","PhaseQuestion_PhaseQuestion","_examinedHtml","html","examinedHtml","question","isAnswered","reduce","acc","concat","QuestionTypes","VALUE","FREE_FORM","SELECT","Question_Question","text","selectedOptionIndex","index","getSelectedOption","answer","QuestionSelect_QuestionSelect","Option_Option","humanText","className","QuestionFreeForm_QuestionFreeForm","questionText","placeholderText","minResponseLength","setSelectedOption","watchSelectedOption","Correctness","CORRECT","INCORRECT","NOT_SURE","OPTION_INCORRECT","QuestionValue_QuestionValue","valueQuestioned","_valueQuestioned","assign","valueChecked","QuestionFactory_QuestionFactory","createQuestionFreeForm","createQuestionSelect","createQuestionValue","ask","addOption","valueExamined","examine","PhaseFactory_PhaseFactory","questionFactory","createPhaseAttempt","createPhaseQuestion","createPhaseReport","action","internalName","execute","summarizeResult","setDataSummarizer","setInstructions","lookAt","addQuestion","DataCollector","debugProcess","censoredProps","Set","scrub","buildData","nav","window","navigator","getSummarySoFar","contentHtml","document","getElementById","outerHTML","appCodeName","app","appName","appVersion","platfrom","userAgent","languages","extend","oscpu","gameData","game_data","keys","has","censorCsrfInString","replace","API","bugReport","BugReporter_BugReporter","title","dataCollected","getCollectibleData","majorVersion","world","player","TwCheese","version","JSON","stringify","createIssue","response","fetch","method","body","ok","statusText","json","Config_Config","id","props","_loadCachedData","prop","defaultValue","propPath","tokens","split","token","getProp","setProp","_save","saved","localStorage","getItem","parse","_beforeSave","setItem","_getCacheableData","throttle","maxBurstsPerSecond","recentRequests","Array","unshift","performance","now","pop","anchorTimestamp","delayMs","setTimeout","originalFetch","requestWasMade","apply","arguments","RemoteConfig_RemoteConfig","seconds","ttl","needsUpdate","update","Date","getTime","timeUpdated","xmlDoc","sleepIfNeeded","responseText","DOMParser","parseFromString","requestXml","_processXml","parseXmlNode","node","children","parseFloat","innerHTML","childNode","tagName","config","userConfig","gameConfig","setUrl","domain","setTtl","buildingConfig","troopConfig","game","image_base","ImageSrc_self","ROOT","ImageSrc","plus","minus","wood","stone","iron","attack","haulPartial","haulFull","info","attackSentViaFa","attackSizeSmall","attackSizeMedium","attackSizeLarge","attackContainsSnob","attackContainsSpy","attackContainsKnight","popupBackground","popupBorder","servant","loadingSpinner","calendar","sidebarMain","sidebarBug","sidebarGithub","jq","blue","black","darkGrey","grey","red","legacy","helpBackground","helpBackgroundBright","buildingIcon","buildingType","troopIcon","troopType","dotIcon","color","scavengeOption","optionId","cssInitd","initCss","css","appendTo","add","skipKey","skippableId","ScavengeOption","base","loot_factor","squadCapacity","getLootPercent","preDuration","Math","pow","duration_exponent","duration_initial_seconds","round","duration_factor","durationSeconds","sqrt","Troops_troopTypes","travelMinutes","troop","speed","troopCarry","carry","TroopCounts","allowedTroopTypes","counts","includes","count","values","sum","doSomething","capacity","troopPop","distance","role","calcTravelDuration","travelMinutesPerField","knight","relevantMinutes","filter","max","subtrahend","difference","troopCounts","array","troops","forEach","minutesPerField","Troops_troopUtil","troopTypesOnWorld","units","existsOnWorld","resourceAmount","haulBonus","troopCount","carryCapacity","factor","travelDuration","scrapeScavengeModels","gameDoc","jsCode","scripts","getElementsByTagName","script","code","findScavengeScreenJsCode","dataFromParams","paramCode","troopsCode","optionsConfigStartIndex","indexOf","optionsConfigCode","wrappedCode","troopsStartIndex","optionsConfig","parseScavengeScreenParamCode","startIndex","findScavengeScreenParamCode","villageCode","findVillageCode","village","scrapeScavengeData","optionBases","Map","set","parseInt","sendableTroopTypes","haulFactor","unit_carry_factor","string","firstParenIndex","openingChar","closingChar","openingParens","closingParens","lastParenIndex","char","substring","ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences","_sendableTroopTypes","reset","MODE_SANE_PERSON","allowedOptionIds","targetDurationSeconds","initTroops","troopOrder","maySend","reserved","isAllowed","delete","exported","MODE_ADDICT","MODE_EFFICIENT","ScavengeTroopsAssigner_ScavengeTroopsAssigner","troopUtil","preferences","availableTroopCounts","getAllowedTroopTypes","subtract","getReservedTroopCounts","zeroNegatives","usableOptionIds","isOptionAllowed","adjustAvailableTroopCounts","populationUsed","adjustUsableOptionIds","assignTroopsForAddict","assignTroopsForEfficientPerson","assignTroopsForSanePerson","assignedCountsByOption","optionIds","reverse","assignedCounts","targetCapacity","calcTargetCapacity","chunkTroopsToHaul","numberOfUsableOptions","splitCapacity","maxCapacity","min","availableCapacity","targetCapacitySum","inverseLootFactors","inverseLootFactorSum","getLootFactor","portionAvailableTroopsOverall","assignedTroopCounts","capacities","chunk","chunkRatio","floor","troopsToTopOff","each","troopTypes","extraCounts","unassignedExists","closestType","smallestDiff","Number","MAX_SAFE_INTEGER","diff","abs","AbstractWidget","el","_beforeInsert","before","$el","after","append","afterInsert","callback","observer","MutationObserver","mutations","outerloop","mutation","addedNodes","contains","disconnect","observe","attributes","childList","subtree","afterDOMInsert","ScavengePreferencesWidget_ScavengePreferencesWidget","scavengeOptions","initStructure","initTroopOrder","watchSelf","createHtml","trim","$targetDuration","find","$options","$modes","$troopsAllowed","$troopsReserved","$troopGroups","createTimingSectionHtml","createOptionsSectionHtml","createTroopsSectionHtml","createTroopsOrderSectionHtml","overallSeconds","hours","minutes","String","padStart","modeSane","modeAddict","modeEfficient","createOptionRowHtml","checked","getName","helpTooltip","createTroopRowHtml","isTroopTypeAllowed","reservedCount","getReservedCount","$group","eq","$troopType","$draggingTroop","preventDefault","addClass","removeClass","updateTroopOrderPreferences","dt","originalEvent","dataTransfer","setDragImage","clone","dropEffect","order","determineTroopOrder","setTroopOrder","chunks","$troops","prefs","checkValidity","match","setCustomValidity","setTargetDuration","$option","setOptionAllowed","val","setMode","$this","setTroopAllowed","setReservedCount","dataset","ASS_haulFactor","troopsAssigner","processCfg","initialized","prepareBestOption","informUserOfIssues","usableIds","scrapeUsableOptionIds","UI","ErrorMessage","availableTroops","availableCounts","unit","scrapeAvailableTroopCounts","areTroopsSufficient","assignedTroopsByOption","assignTroops","focus","focusStartButton","processFactory","registerTool","use","here","location","href","atScavengeScreen","screen","screenName","uriParams","InfoMessage","TribalWars","redirect","buttonConfirm","skipNextTime","confirm","ConfirmationBox","buildContent","suggestRedirect","all","ensureUpdated","ensureRemoteConfigsUpdated","models","exportedPreferences","import","export","$launcher","fontSize","marginLeft","onClose","Dialog","show","$container","widget","openPreferencesPopup","insertPreferencesLauncher","$narcissism","float","fontWeight","insertNarcissim","didScavengingStart","is","afterScavengingStarted","init","getDebugProcess"],"mappings":"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","file":"../ASS.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DebugEvents; });\nconst DebugEvents = {\r\n    PHASE_COMPLETION_READY: 'phase_completion_ready',\r\n    PHASE_COMPLETION_NOT_READY: 'phase_completion_not_ready',\r\n    PHASE_CHANGED: 'phase_changed',\r\n    QUESTION_ANSWERED: 'question_answered',\r\n    QUESTION_NOT_ANSWERED: 'question_not_answered',\r\n    OPTION_VALUE_CHANGED: 'answer_value_changed',\r\n    BUG_REPORT_SUCCEEDED: 'bug_report_succeeded',\r\n    BUG_REPORT_FAILED: 'bug_report_failed',\r\n    USER_REJECTED: 'user_rejected'\r\n};\r\n\r\n\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Phase; });\n\r\nclass Phase {\r\n    constructor(phaseName) {\r\n        this.name = phaseName;\r\n        this.followsUpOn = null;\r\n        this.autoComplete = false;\r\n    }\r\n\r\n    setFollowsUpOn(thingToFollowUpOn) {\r\n        this.followsUpOn = thingToFollowUpOn;\r\n        return this;\r\n    }\r\n\r\n    setAutoComplete(auto) {\r\n        this.autoComplete = auto;\r\n        return this;\r\n    }\r\n\r\n    getType() {\r\n        throw Error('notimplemented');\r\n    }\r\n\r\n    start() {\r\n        throw Error('not implemented');\r\n    }\r\n\r\n    checkCompletionReady() {\r\n        throw Error('not implemented');\r\n    }\r\n\r\n    getThingsToFollowUpOn() {\r\n        throw Error('not implemented');\r\n    }\r\n\r\n    getSummary() {\r\n        throw Error('not implemented');\r\n    }\r\n    \r\n}\r\n\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseTypes; });\nconst PhaseTypes = {\r\n    ATTEMPT: 'attempt',\r\n    QUESTION: 'question',\r\n    REPORT: 'report'\r\n};\r\n\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ProcessFactory; });\n/* harmony import */ var _twcheese_src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _twcheese_src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var _twcheese_src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\n/* harmony import */ var _twcheese_src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n\r\n\r\nfunction lazyEvalUsingParent(parentPhase) {\r\n    return (str) => {\r\n        return () => {\r\n            let parentResult = parentPhase.result;\r\n            return eval(str);\r\n        };\r\n    }\r\n}\r\n\r\n\r\nclass ProcessFactory {\r\n\r\n    constructor(actions) {\r\n        this.phaseFactory = new _twcheese_src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__[/* PhaseFactory */ \"a\"](actions);\r\n    }\r\n\r\n    create(name, cfg, finishWithReport) {\r\n        let process = new _twcheese_src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugProcess */ \"a\"](name);\r\n\r\n        for (let phaseCfg of cfg.phases) {\r\n            process.enqueuePhase(this.createPhase(phaseCfg));\r\n        }\r\n\r\n        if (finishWithReport) {\r\n            let bugReporter = new _twcheese_src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__[/* BugReporter */ \"a\"](process);\r\n            process.enqueuePhase(_twcheese_src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__[/* PhaseReport */ \"a\"].create(bugReporter));\r\n        }\r\n\r\n        return process;\r\n    }\r\n\r\n    createPhase(cfg, lazyEval) {\r\n        let phase = this.phaseFactory.create(cfg, lazyEval);\r\n        this.addFollowUpPhasesForSuccess(phase, cfg);\r\n        this.addFollowUpPhasesForAnswers(phase, cfg);\r\n        return phase;\r\n    }\r\n\r\n    addFollowUpPhasesForSuccess(phase, cfg) {\r\n        if (cfg.type === 'PhaseAttempt' && cfg.success) {\r\n            for (let phaseCfg of cfg.success) {\r\n                let subPhase = this.createPhase(phaseCfg, lazyEvalUsingParent(phase));\r\n                phase.addSuccessFollowUp(subPhase);\r\n            }\r\n        }\r\n    }\r\n\r\n    addFollowUpPhasesForAnswers(phase, cfg) {\r\n        if (cfg.type !== 'PhaseQuestion') {\r\n            return;\r\n        }\r\n        \r\n        for (let [q, questionCfg] of Object.entries(cfg.questions)) {\r\n            if (questionCfg.type !== 'QuestionSelect') {\r\n                continue;\r\n            }\r\n            for (let [o, optionCfg] of Object.entries(questionCfg.options)) {\r\n                if (optionCfg.followUp) {\r\n                    for (let phaseCfg of optionCfg.followUp) {\r\n                        let option = phase.questions[q].options[o];\r\n                        let subPhase = this.createPhase(phaseCfg, lazyEvalUsingParent(phase))\r\n                        option.addFollowUp(subPhase);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DebugProcess; });\n/* harmony import */ var _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n\r\n\r\n\r\nclass DebugProcess {\r\n    constructor(processName) {\r\n        this.name = processName;\r\n        this.phases = [];\r\n        this.currentPhaseIndex = -1;\r\n    }\r\n\r\n    enqueuePhase(phase) {\r\n        this.phases.push(phase);\r\n        this.watchPhase(phase);\r\n        return this;\r\n    }\r\n\r\n    insertPhase(phase) {\r\n        this.phases.splice(this.currentPhaseIndex + 1, 0, phase);\r\n        this.watchPhase(phase);\r\n        return this;\r\n    }\r\n\r\n    watchPhase(phase) {\r\n        let events = [\r\n            _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY,\r\n            _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_NOT_READY,\r\n            _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_CHANGED\r\n        ];\r\n\r\n        $(phase).on(events.join(' '), (e) => $(this).trigger(e.type, e));\r\n\r\n        $(phase).on(_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY, () => {\r\n            if (phase.autoComplete) {\r\n                this.goToNextPhase();\r\n            }\r\n        });\r\n    }\r\n\r\n    start() {\r\n        this.currentPhaseIndex = -1;\r\n        this.goToNextPhase();\r\n    }\r\n\r\n    goToNextPhase() {\r\n        if (this.currentPhaseIndex >= 0) {\r\n            for (let thing of this.getCurrentPhase().getThingsToFollowUpOn()) {\r\n                for (let phase of thing.followUpPhases) {\r\n                    this.insertPhase(phase);\r\n                }            \r\n            }\r\n        }        \r\n        if (!this.hasNextPhase()) {\r\n            throw Error(`there's no next phase`);\r\n        }\r\n        this.currentPhaseIndex++;\r\n        $(this).trigger(_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_CHANGED);\r\n        this.getCurrentPhase().checkCompletionReady();\r\n        this.getCurrentPhase().start();\r\n    }\r\n\r\n    hasNextPhase() {\r\n        return this.currentPhaseIndex < this.phases.length - 1;\r\n    }\r\n\r\n    getCurrentPhase() {\r\n        return this.phases[this.currentPhaseIndex];\r\n    }\r\n\r\n    getSummarySoFar() {\r\n        // everything before the current phase\r\n        return this.phases.slice(0, this.currentPhaseIndex)\r\n            .map(phase => phase.getSummary());\r\n    }\r\n\r\n    static create(processName) {\r\n        return new DebugProcess(processName);\r\n    }\r\n\r\n}\r\n\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseReport; });\n/* harmony import */ var _twcheese_src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\n/* harmony import */ var _twcheese_src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n\r\n\r\n\r\n\r\n\r\nconst Status = {\r\n    SUCCESS: 'success',\r\n    FAIL: 'fail',\r\n    NOT_ATTEMPTED: 'not_attempted'\r\n};\r\n\r\n\r\nclass PhaseReport extends _twcheese_src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__[/* Phase */ \"a\"] {\r\n    constructor(bugReporter) {\r\n        super('send bug report');\r\n        this.bugReporter = bugReporter;\r\n        this.status = Status.NOT_ATTEMPTED;\r\n        this.error;\r\n    }\r\n\r\n    getType() {\r\n        return _twcheese_src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__[/* PhaseTypes */ \"a\"].REPORT;\r\n    }\r\n\r\n    start() {\r\n        let report = this.bugReporter.buildReport();\r\n        this.bugReporter.submitReport(report)\r\n            .then(d => {\r\n                this.status = Status.SUCCESS;\r\n                $(this).trigger({\r\n                    type: _twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].BUG_REPORT_SUCCEEDED,\r\n                    url: d.html_url\r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.error = error;\r\n                this.status = Status.FAIL;\r\n                $(this).trigger(_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].BUG_REPORT_FAILED)\r\n            })\r\n            .finally(() => this.checkCompletionReady());\r\n    }\r\n\r\n    checkCompletionReady() {\r\n        if (this.status !== Status.NOT_ATTEMPTED) {\r\n            $(this).trigger(_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY);\r\n        } else {\r\n            $(this).trigger(_twcheese_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_NOT_READY);\r\n        }\r\n    }\r\n\r\n    getThingsToFollowUpOn() {\r\n        return [];\r\n    }\r\n\r\n    getSummary() {\r\n        return {\r\n            phaseName: this.name\r\n        };\r\n    }\r\n\r\n    static create(bugReporter) {\r\n        return new PhaseReport(bugReporter);\r\n    }\r\n}\r\n\r\n\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/Models/Debug/Phase.js\nvar Phase = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/Models/Debug/DebugEvents.js\nvar DebugEvents = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/Models/Debug/PhaseTypes.js\nvar PhaseTypes = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/Models/Debug/PhaseAttempt.js\n\r\n\r\n\r\n\r\nconst Status = {\r\n    SUCCESS: 'success',\r\n    FAIL: 'fail',\r\n    NOT_ATTEMPTED: 'not_attempted'\r\n};\r\n\r\n\r\nclass PhaseAttempt_PhaseAttempt extends Phase[\"a\" /* Phase */] {\r\n    constructor(phaseName, asyncFunctionToAttempt) {\r\n        super(phaseName);\r\n        this.instructions;\r\n        this.attempt = asyncFunctionToAttempt;\r\n        this.success = async () => {};\r\n        this.fail = async () => {};\r\n        this.status = Status.NOT_ATTEMPTED;\r\n        this.autoComplete = true;\r\n        this._error;\r\n        this._result;\r\n        this.summarizeData = d => d;\r\n        this.ctrl = {};\r\n\r\n        this.successFollowUpPhases = [];\r\n    }\r\n\r\n    getType() {\r\n        return PhaseTypes[\"a\" /* PhaseTypes */].ATTEMPT;\r\n    }\r\n\r\n    get result() {\r\n        if (this.status === Status.NOT_ATTEMPTED) {\r\n            throw new Error('tried to get result before the attempt settled');\r\n        }\r\n        if (this.status === Status.FAIL) {\r\n            throw new Error(`tried to get result of an attempt that failed`);\r\n        }\r\n        return this._result;\r\n    }\r\n\r\n    async doAttempt() {\r\n        try {\r\n            let result = await this.abortableAttempt();\r\n            this.status = Status.SUCCESS;\r\n            this._result = result;            \r\n            await this.success(result);\r\n        } catch (err) {\r\n            console.warn(err);\r\n            this.status = Status.FAIL;\r\n            this._error = err;\r\n            await this.fail(err);\r\n        }\r\n        this.checkCompletionReady();\r\n    }\r\n\r\n    async abortableAttempt() {\r\n        return new Promise(async (resolve, reject) => {\r\n            $(this.ctrl).on(DebugEvents[\"a\" /* DebugEvents */].USER_REJECTED, () => reject('user rejected'));\r\n            try {\r\n                let parentResult;\r\n                if (this.followsUpOn) {\r\n                    parentResult = this.followsUpOn.result;\r\n                }\r\n                let result = await this.attempt(parentResult, this.ctrl);\r\n                resolve(result);\r\n            }\r\n            catch(err) {\r\n                reject(err);\r\n            }            \r\n        });\r\n    }\r\n\r\n    userAbort() {\r\n        $(this.ctrl).trigger(DebugEvents[\"a\" /* DebugEvents */].USER_REJECTED);\r\n    }\r\n\r\n    setInstructions(instructions) {\r\n        this.instructions = instructions;\r\n        return this;\r\n    }\r\n\r\n    setDataSummarizer(func) {\r\n        this.summarizeData = func;\r\n        return this;\r\n    }\r\n\r\n    onSuccess(cb) {\r\n        this.success = cb;\r\n        return this;\r\n    }\r\n\r\n    addSuccessFollowUp(phase) {\r\n        this.successFollowUpPhases.push(phase);\r\n        phase.setFollowsUpOn(this);\r\n        return this;\r\n    }\r\n\r\n    get followUpPhases() {\r\n        if (this.status === Status.SUCCESS) {\r\n            return this.successFollowUpPhases;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    onFail(cb) {\r\n        this.fail = cb;\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        this.doAttempt();\r\n    }\r\n\r\n    checkCompletionReady() {\r\n        if (this.status !== Status.NOT_ATTEMPTED) {\r\n            $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_READY);\r\n        } else {\r\n            $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_NOT_READY);\r\n        }\r\n    }\r\n\r\n    getThingsToFollowUpOn() {\r\n        return [this];\r\n    }\r\n\r\n    getSummary() {\r\n        return {\r\n            phaseName: this.name,\r\n            status: this.status,\r\n            data: typeof this._result === 'undefined' ? this._result : this.summarizeData(this._result),\r\n            error: this.summarizeError()\r\n        }\r\n    }\r\n\r\n    summarizeError() {\r\n        let err = this._error;\r\n        if (!(err instanceof Error)) {\r\n            return err;\r\n        }\r\n        return {\r\n            message: err.message,\r\n            name: err.name,\r\n            extra: err.extra,\r\n            stack: err.stack\r\n        };\r\n    }\r\n    \r\n    static create(phaseNum, functionToAttempt) {\r\n        return new PhaseAttempt_PhaseAttempt(phaseNum, functionToAttempt);\r\n    }\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/PhaseQuestion.js\n\r\n\r\n\r\n\r\n\r\nclass PhaseQuestion_PhaseQuestion extends Phase[\"a\" /* Phase */] {\r\n    constructor(phaseName) {\r\n        super(phaseName);\r\n        this.questions = [];\r\n        this._examinedHtml;\r\n    }\r\n\r\n    getType() {\r\n        return PhaseTypes[\"a\" /* PhaseTypes */].QUESTION;\r\n    }\r\n\r\n    lookAt(html) {\r\n        this._examinedHtml = html;\r\n        return this;\r\n    }\r\n\r\n    get examinedHtml() {\r\n        if (typeof this._examinedHtml === 'function') {\r\n            return this._examinedHtml();\r\n        }\r\n        return this._examinedHtml;\r\n    }\r\n\r\n    addQuestion(question) {\r\n        this.questions.push(question);\r\n        $(question).on(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED, () => {\r\n            this.checkCompletionReady();\r\n        });\r\n        $(question).on(DebugEvents[\"a\" /* DebugEvents */].QUESTION_NOT_ANSWERED, () => {\r\n            this.checkCompletionReady();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        // do nothing;\r\n    }\r\n\r\n    checkCompletionReady() {\r\n        for (let question of this.questions) {\r\n            if (!question.isAnswered()) {\r\n                $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_NOT_READY);\r\n                return;\r\n            }\r\n        }\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_READY);\r\n    }\r\n\r\n    getThingsToFollowUpOn() {\r\n        return this.questions.reduce((acc, question) => acc.concat(question.getThingsToFollowUpOn()), []);\r\n    }\r\n\r\n    getSummary() {\r\n        return {\r\n            phaseName: this.name,\r\n            questions: this.questions.map(question => question.getSummary())\r\n        };\r\n    }\r\n\r\n    static create(phaseName) {\r\n        return new PhaseQuestion_PhaseQuestion(phaseName);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionTypes.js\nconst QuestionTypes = {\r\n    VALUE: 'value',\r\n    FREE_FORM: 'free_form',\r\n    SELECT: 'select'\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Question.js\n\r\n\r\n\r\nclass Question_Question {\r\n    constructor(text) {\r\n        this.text = text;\r\n        this.options = [];\r\n        this.selectedOptionIndex = null;\r\n    }\r\n\r\n    getType() {\r\n        throw Error('not implemented');\r\n    }\r\n\r\n    addOption(option) {\r\n        this.options.push(option);\r\n        return this;\r\n    }\r\n\r\n    setSelectedOption(index) {\r\n        this.selectedOptionIndex = index;\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED);\r\n        return this;\r\n    }\r\n\r\n    isAnswered() {\r\n        return this.selectedOptionIndex !== null;\r\n    }\r\n\r\n    getSelectedOption() {\r\n        return this.options[this.selectedOptionIndex];\r\n    }\r\n\r\n    getThingsToFollowUpOn() {\r\n        let option = this.getSelectedOption();\r\n        return (option.followUpPhases.length > 0) ? [option] : [];\r\n    }\r\n\r\n    getSummary() {\r\n        return {\r\n            question: this.text,\r\n            answer: this.getSelectedOption().value\r\n        };\r\n    }\r\n\r\n    static create(text) {\r\n        return new Question_Question(text);\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionSelect.js\n\r\n\r\n\r\n\r\nclass QuestionSelect_QuestionSelect extends Question_Question {\r\n    getType() {\r\n        return QuestionTypes.SELECT;\r\n    }\r\n\r\n    static create(text) {\r\n        return new QuestionSelect_QuestionSelect(text);\r\n    }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Option.js\n\r\n\r\n\r\nclass Option_Option {\r\n    constructor(humanText, value, className = '') {\r\n        this.text = humanText;\r\n        this.value = value;\r\n        this.className = className;\r\n        this.followUpPhases = [];\r\n    }\r\n\r\n    addFollowUp(phase) {\r\n        this.followUpPhases.push(phase);\r\n        phase.setFollowsUpOn(this);\r\n        return this;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.value = value;\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].OPTION_VALUE_CHANGED);\r\n    }\r\n\r\n    static create(humanText, value, className) {\r\n        return new Option_Option(humanText, value, className);\r\n    }\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionFreeForm.js\n\r\n\r\n\r\n\r\n\r\n\r\nclass QuestionFreeForm_QuestionFreeForm extends Question_Question {\r\n\r\n    constructor(questionText, placeholderText, minResponseLength = 0) {\r\n        super(questionText);\r\n        this.minResponseLength = minResponseLength;\r\n        this.options = [\r\n            Option_Option.create(placeholderText, '', 'free-form')\r\n        ];\r\n        this.setSelectedOption(0);\r\n        this.watchSelectedOption();        \r\n    }\r\n\r\n    getType() {\r\n        return QuestionTypes.FREE_FORM;\r\n    }\r\n\r\n    watchSelectedOption() {\r\n        $(this.getSelectedOption()).on(DebugEvents[\"a\" /* DebugEvents */].OPTION_VALUE_CHANGED, () => {\r\n            if (this.isAnswered()) {\r\n                $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED);\r\n            } else {\r\n                $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_NOT_ANSWERED);\r\n            }\r\n        });\r\n    }\r\n\r\n    isAnswered() {\r\n        return super.isAnswered() && this.options[0].value.length >= this.minResponseLength;\r\n    }\r\n\r\n    static create(questionText, placeholderText, minResponseLength) {\r\n        return new QuestionFreeForm_QuestionFreeForm(questionText, placeholderText, minResponseLength);\r\n    }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Correctness.js\n\r\nconst Correctness = {\r\n    CORRECT: 'correct',\r\n    INCORRECT: 'incorrect',\r\n    NOT_SURE: 'not_sure'\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionValue.js\n\r\n\r\n\r\n\r\n\r\n\r\nconst OPTION_INCORRECT = 1;\r\n\r\nclass QuestionValue_QuestionValue extends Question_Question {\r\n\r\n    constructor(questionText, valueQuestioned) {\r\n        super(questionText);\r\n        this._valueQuestioned = valueQuestioned;\r\n        this.options = [\r\n            Option_Option.create('Correct', Correctness.CORRECT, 'correct'),\r\n            Option_Option.create('Incorrect', Correctness.INCORRECT, 'incorrect'),\r\n            Option_Option.create('Not sure', Correctness.NOT_SURE, 'not-sure')\r\n        ];\r\n    }\r\n\r\n    get value() {\r\n        if (typeof this._valueQuestioned === 'function') {\r\n            return this._valueQuestioned();\r\n        }\r\n        return this._valueQuestioned;\r\n    }\r\n\r\n    getType() {\r\n        return QuestionTypes.VALUE;\r\n    }\r\n\r\n    addFollowUp(phase) {\r\n        this.options[OPTION_INCORRECT].addFollowUp(phase);\r\n        return this;\r\n    }\r\n\r\n    getSummary() {\r\n        return Object.assign(super.getSummary(), {\r\n            valueChecked: this.value\r\n        });\r\n    }\r\n\r\n    static create(questionText, valueQuestioned) {\r\n        return new QuestionValue_QuestionValue(questionText, valueQuestioned);\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Build/QuestionFactory.js\n\r\n\r\n\r\n\r\n\r\n\r\nclass QuestionFactory_QuestionFactory {\r\n    \r\n    create(cfg, lazyEval) {\r\n        switch (cfg.type) {\r\n            case 'QuestionFreeForm':\r\n                return this.createQuestionFreeForm(cfg);\r\n            case 'QuestionSelect':\r\n                return this.createQuestionSelect(cfg);\r\n            case 'QuestionValue':\r\n                return this.createQuestionValue(cfg, lazyEval);\r\n            default:\r\n                throw `unrecognized question type: ${cfg.type}`;\r\n        }\r\n    }\r\n\r\n    createQuestionFreeForm(cfg) {\r\n        let minResponseLength = cfg.minResponseLength || 0;\r\n        return QuestionFreeForm_QuestionFreeForm.create(cfg.ask, cfg.placeholderText, minResponseLength);\r\n    }\r\n\r\n    createQuestionSelect(cfg) {\r\n        let question = QuestionSelect_QuestionSelect.create(cfg.ask);\r\n\r\n        for (let optionCfg of cfg.options) {\r\n            question.addOption(Option_Option.create(optionCfg.answer, optionCfg.value));\r\n        }\r\n\r\n        return question;\r\n    }\r\n\r\n    createQuestionValue(cfg, lazyEval) {\r\n        let valueExamined = lazyEval(cfg.examine);\r\n        return QuestionValue_QuestionValue.create(cfg.ask, valueExamined);\r\n    }\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Build/PhaseFactory.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseFactory_PhaseFactory; });\n\r\n\r\n\r\n\r\n\r\nclass PhaseFactory_PhaseFactory {\r\n\r\n    constructor(actions) {\r\n        this.actions = actions;\r\n        this.questionFactory = new QuestionFactory_QuestionFactory();\r\n    }\r\n\r\n    create(cfg, lazyEval) {\r\n        switch (cfg.type) {\r\n            case 'PhaseAttempt':\r\n                return this.createPhaseAttempt(cfg);\r\n            case 'PhaseQuestion':\r\n                return this.createPhaseQuestion(cfg, lazyEval);\r\n            case 'PhaseReport':\r\n                return this.createPhaseReport(cfg);\r\n            default:\r\n                throw Error(`unrecognized phase type ${cfg.type}`);\r\n        }\r\n    }\r\n\r\n    createPhaseAttempt(cfg) {\r\n        let action = this.actions[cfg.action];\r\n        if (typeof action === 'undefined') {\r\n            throw Error(`unrecognized action: ${cfg.action}`);\r\n        }\r\n\r\n        let phase = PhaseAttempt_PhaseAttempt.create(cfg.internalName, action.execute);\r\n\r\n        if (action.summarizeResult) {\r\n            phase.setDataSummarizer(action.summarizeResult);\r\n        }\r\n        if (cfg.instructions) {\r\n            phase.setInstructions(cfg.instructions);\r\n        }\r\n        return phase;\r\n    }\r\n\r\n    createPhaseQuestion(cfg, lazyEval) {\r\n        let phase = PhaseQuestion_PhaseQuestion.create(cfg.internalName);\r\n\r\n        if (cfg.lookAt) {\r\n            phase.lookAt(lazyEval(cfg.lookAt));\r\n        }\r\n\r\n        for (let questionCfg of cfg.questions) {\r\n            let question = this.questionFactory.create(questionCfg, lazyEval);\r\n            phase.addQuestion(question);\r\n        }\r\n        \r\n        return phase;\r\n    }\r\n\r\n}\r\n\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// CONCATENATED MODULE: ./src/Models/Debug/DataCollector.js\n\r\nclass DataCollector {\r\n    constructor(debugProcess) {\r\n        this.process = debugProcess;\r\n        this.censoredProps = new Set(['csrf', 'birthdate']);\r\n    }\r\n\r\n    getCollectibleData() {\r\n        return this.scrub(this.buildData());\r\n    }\r\n\r\n    buildData() {\r\n        let nav = window.navigator;\r\n\r\n        return {\r\n            process: this.process.getSummarySoFar(),\r\n            contentHtml: document.getElementById('contentContainer').outerHTML,\r\n            navigator: {\r\n                appCodeName: nav.app,\r\n                appName: nav.appName,\r\n                appVersion: nav.appVersion,\r\n                platfrom: nav.platfrom,\r\n                userAgent: nav.userAgent,\r\n                languages: $.extend(true, [], nav.languages),\r\n                oscpu: nav.oscpu\r\n            },\r\n            gameData: $.extend(true, {}, window.game_data)\r\n        }\r\n    }\r\n\r\n    scrub(d) {\r\n        if (typeof d === 'object' && d !== null) {\r\n            for (let key of Object.keys(d)) {\r\n                if (this.censoredProps.has(key)) {\r\n                    d[key] = 'CENSORED';\r\n                } else {\r\n                    d[key] = this.scrub(d[key]);\r\n                }\r\n            }\r\n        }\r\n        if (typeof d === 'string') {\r\n            return this.censorCsrfInString(d);\r\n        }\r\n        return d;\r\n    }\r\n\r\n    censorCsrfInString(s) {\r\n        return s.replace(/((&|&amp;)h=)(\\w+)/g, '$1CENSORED')\r\n            .replace(/(\\?h=)(\\w+)(&|&amp;)/g, '$1CENSORED$3')\r\n            .replace(/(csrf_token = ')(\\w+)/g, '$1CENSORED')\r\n            .replace(/(\"csrf\":\")(\\w+)/g, '$1CENSORED');\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./conf/API.js\nlet API = {\r\n    bugReport: {\r\n        url: 'https://56hqsw3c2c.execute-api.us-east-2.amazonaws.com/prod/bugreport'\r\n    }\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/BugReporter.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BugReporter_BugReporter; });\n\r\n\r\n\r\nclass BugReporter_BugReporter {\r\n    constructor(process) {\r\n        this.process = process;\r\n    }\r\n\r\n    buildReport() {\r\n        return {\r\n            title: '[Bug report] ' + this.process.name,\r\n            dataCollected: (new DataCollector(this.process)).getCollectibleData()\r\n        }\r\n    }\r\n\r\n    async submitReport(report) {\r\n        let message = [\r\n            '|game version|world|player|twcheese|',\r\n            '|---|---|---|---|',\r\n            `|${game_data.majorVersion}|${game_data.world}|${game_data.player.name}|${window.TwCheese.version}|`,\r\n            '```' + JSON.stringify(report.dataCollected, null, 2) +  '```'\r\n        ].join(\"\\n\");\r\n        return await this.createIssue(report.title, message);\r\n    }\r\n\r\n    async createIssue(title, message) {\r\n        let response = await fetch(API.bugReport.url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: title,\r\n                message: message\r\n            })\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to create issue. [${response.status}: ${response.statusText}]`);\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n}\r\n\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Util/Object.js\n\r\n\r\nfunction getProp(object, propPath, defaultValue) {\r\n    let tokens = propPath.split('.');\r\n    for (let i = 0; i < tokens.length - 1; i++) {\r\n        let token = tokens[i];\r\n        if (typeof object[token] !== 'object' || token === null) {\r\n            return defaultValue;\r\n        }\r\n        object = object[token];\r\n    }\r\n    let value = object[tokens[tokens.length - 1]];\r\n    return (typeof value === 'undefined') ? defaultValue : value;\r\n}\r\n\r\n\r\nfunction setProp(object, propPath, value) {\r\n    let tokens = propPath.split('.');\r\n    for (let i = 0; i < tokens.length - 1; i++) {\r\n        let token = tokens[i];\r\n        if (typeof object[token] !== 'object' || token === null) {\r\n            object[token] = {};\r\n        }\r\n        object = object[token];\r\n    }\r\n    object[tokens[tokens.length - 1]] = value;\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Config.js\n\r\n\r\n\r\nclass Config_Config {\r\n    constructor(id) {\r\n        this.id = id;\r\n        this.props = {};\r\n        this._loadCachedData();\r\n    }\r\n\r\n    get(prop, defaultValue) {\r\n        return getProp(this.props, prop, defaultValue);\r\n    }\r\n\r\n    set(prop, value) {\r\n        setProp(this.props, prop, value);\r\n        this._save();\r\n    }\r\n\r\n    initProps(props) {\r\n        this.props = props;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @return {object|null}\r\n     */\r\n    _loadCachedData() {\r\n        let saved = window.localStorage.getItem(this.id);\r\n        if (saved) {\r\n            let data = JSON.parse(saved);\r\n\r\n            // should ideally be data.props\r\n            // But for backwards compatibility, the data could be the props too.\r\n            this.props = data.props || data;\r\n            return data;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @final\r\n     * @protected\r\n     */\r\n    _save() {\r\n        this._beforeSave();\r\n        window.localStorage.setItem(this.id, JSON.stringify(this._getCacheableData()));\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    _beforeSave() {\r\n        \r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @return {object}\r\n     */\r\n    _getCacheableData() {\r\n        return {\r\n            props: this.props\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/RateLimiter.js\nclass RateLimiter {\r\n    constructor(maxBurstsPerSecond) {\r\n        this.maxBurstsPerSecond = maxBurstsPerSecond;\r\n        this.recentRequests = new Array(maxBurstsPerSecond);\r\n    }\r\n\r\n    requestWasMade() {\r\n        this.recentRequests.unshift(performance.now());\r\n        this.recentRequests.pop();\r\n    }\r\n\r\n    async sleepIfNeeded() {\r\n        let anchorTimestamp = this.recentRequests[this.maxBurstsPerSecond - 1];\r\n        if (typeof anchorTimestamp === 'undefined') {\r\n            return;\r\n        }\r\n        let delayMs = anchorTimestamp + 1000 - performance.now();\r\n        if (delayMs <= 0) {\r\n            return;\r\n        }\r\n        return new Promise(function(resolve, reject) {\r\n            setTimeout(resolve, delayMs);\r\n        });\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/Network.js\n\r\n\r\nlet throttle = new RateLimiter(5);\r\n\r\nlet originalFetch = window.fetch;\r\nwindow.fetch = function() {\r\n    throttle.requestWasMade();\r\n    return originalFetch.apply(this, arguments);\r\n};\r\n\r\n\r\n/**\r\n * requests the document from a url\r\n * @param {string} url the url of the page to get the document from\r\n * @return {Promise}\r\n * @resolve {HTMLDocment}\r\n */\r\nasync function requestDocument(url) {\r\n    await throttle.sleepIfNeeded();\r\n    let response = await fetch(url);\r\n    let responseText = await response.text();\r\n    let doc = (new DOMParser()).parseFromString(responseText, 'text/html');\r\n\r\n    Object.defineProperty(doc, 'URL', {\r\n        get: () => url\r\n    });\r\n    \r\n    return doc;\r\n};\r\n\r\n\r\n/**\r\n * requests xml document from a url\r\n * @param {string} url the url of the page to get the cml document from\r\n * @return {Promise}\r\n * @resolve {XMLDocument}\r\n */\r\nasync function requestXml(url) {\r\n    await throttle.sleepIfNeeded();\r\n    let response = await fetch(url);\r\n    let responseText = await response.text();\r\n    let xmlDoc = (new DOMParser()).parseFromString(responseText, 'text/xml');\r\n\r\n    Object.defineProperty(xmlDoc, 'URL', {\r\n        get: () => url\r\n    });\r\n\r\n    return xmlDoc;\r\n};\r\n\r\n\r\n/**\r\n * make a POST request to the game\r\n * @param {string} screen \r\n * @param {object} uriParams \r\n * @param {object} data\r\n * @return {Promise}\r\n * @resolve {object} response data from the game\r\n */\r\nasync function postToGame(screen, uriParams, data) {\r\n    await throttle.sleepIfNeeded();\r\n    return new Promise(function(resolve, reject) {\r\n        window.TribalWars.post(screen, uriParams, data, resolve, reject);\r\n    });\r\n}\r\n\r\n\r\nfunction gameUrl(screen, uriParams, method = 'GET') {\r\n    return 'https://' + document.domain + window.TribalWars.buildURL(method, screen, uriParams);\r\n}\r\n\r\n\r\nfunction attackPrepUrl(unitCounts, targetVillageId, originVillageId = window.game_data.village.id) {\r\n    let uriParams = {\r\n        from: 'simulator',\r\n        village: originVillageId,\r\n        target_village_id: targetVillageId        \r\n    };\r\n    for (let [unitType, count] of Object.entries(unitCounts)) {\r\n        uriParams['att_' + unitType] = count;\r\n    }\r\n    return gameUrl('place', uriParams);\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/RemoteConfig.js\n\r\n\r\n\r\n\r\nfunction parseXmlNode(node) {\r\n    if (node.children.length === 0) {\r\n        return parseFloat(node.innerHTML) || null;\r\n    }\r\n    let object = {};\r\n    for (let childNode of node.children) {\r\n        object[childNode.tagName] = parseXmlNode(childNode);\r\n    }\r\n    return object;\r\n}\r\n\r\n\r\nclass RemoteConfig_RemoteConfig extends Config_Config {\r\n\r\n    /**\r\n     * @param {string} url \r\n     */\r\n    setUrl(url) {\r\n        this.url = url;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {number} seconds \r\n     */\r\n    setTtl(seconds) {\r\n        this.ttl = seconds * 1000;\r\n        return this;\r\n    }\r\n\r\n    async ensureUpdated() {\r\n        if (this.needsUpdate()) {\r\n            await this.update();\r\n        }    \r\n    }\r\n\r\n    needsUpdate() {\r\n        let now = new Date().getTime();\r\n        let ttl = this.ttl || 86400;\r\n        return !this.timeUpdated || ttl < now - this.timeUpdated;\r\n    }\r\n\r\n    async update() {\r\n        let xmlDoc = await requestXml(this.url);\r\n        this._processXml(xmlDoc);\r\n        this._save();\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {XMLDocument} xmlDoc \r\n     */\r\n    _processXml(xmlDoc) {\r\n        this.props = parseXmlNode(xmlDoc).config;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @return {object|null}\r\n     */\r\n    _loadCachedData() {\r\n        let data = super._loadCachedData();\r\n        if (data) {\r\n            this.timeUpdated = data.timeUpdated;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    _beforeSave() {\r\n        this.timeUpdated = new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @return {object}\r\n     */\r\n    _getCacheableData() {\r\n        return Object.assign({}, super._getCacheableData(), {\r\n            timeUpdated: this.timeUpdated\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/Config.js\n\r\n\r\n\r\nlet userConfig = new Config_Config('twcheese.userConfig');\r\n\r\nlet gameConfig = (new RemoteConfig_RemoteConfig('twcheese.gameConfig'))\r\n    .setUrl(`https://${document.domain}/interface.php?func=get_config`)\r\n    .setTtl(8 * 3600);\r\n\r\nlet buildingConfig = (new RemoteConfig_RemoteConfig('twcheese.buildingConfig'))\r\n    .setUrl(`https://${document.domain}/interface.php?func=get_building_info`)\r\n    .setTtl(8 * 3600);\r\n\r\nlet troopConfig = (new RemoteConfig_RemoteConfig('twcheese.troopConfig'))\r\n    .setUrl(`https://${document.domain}/interface.php?func=get_unit_info`)\r\n    .setTtl(8 * 3600);\r\n\r\n\r\nasync function ensureRemoteConfigsUpdated() {\r\n    await Promise.all([\r\n        gameConfig.ensureUpdated(),\r\n        troopConfig.ensureUpdated(),\r\n        buildingConfig.ensureUpdated()\r\n    ]);\r\n}\r\n    \r\n\r\n\n// CONCATENATED MODULE: ./conf/ImageSrc.js\nlet game = window.image_base;\r\nlet ImageSrc_self = window.TwCheese.ROOT + '/assets/images/';\r\n\r\nlet ImageSrc = {\r\n    plus: game + 'plus.png',\r\n    minus: game + 'minus.png',\r\n    wood: game + 'holz.png',\r\n    stone: game + 'lehm.png',\r\n    iron: game + 'eisen.png',\r\n    attack: game + 'command/attack.png',\r\n    haulPartial: game + 'max_loot/0.png',\r\n    haulFull: game + 'max_loot/1.png',\r\n    info: game + 'questionmark.png',\r\n    attackSentViaFa: game + 'command/farm.png',\r\n    attackSizeSmall: game + 'command/attack_small.png',\r\n    attackSizeMedium: game + 'command/attack_medium.png',\r\n    attackSizeLarge: game + 'command/attack_large.png',\r\n    attackContainsSnob: game + 'command/snob.png',\r\n    attackContainsSpy: game + 'command/spy.png',\r\n    attackContainsKnight: game + 'command/knight.png',\r\n    popupBackground: game + 'popup/content_background.png',\r\n    popupBorder: game + 'popup/border.png',\r\n    servant: game + 'paladin_new.png',\r\n    loadingSpinner: game + 'throbber.gif',\r\n    calendar: ImageSrc_self + 'calendar.png',\r\n    sidebarMain: ImageSrc_self + 'sidebar/gear.png',\r\n    sidebarBug: ImageSrc_self + 'sidebar/bug.png',\r\n    sidebarGithub: ImageSrc_self + 'sidebar/github.png',\r\n    jq: {\r\n        blue: ImageSrc_self + 'jquery/ui-icons_2e83ff_256x240.png',\r\n        black: ImageSrc_self + 'jquery/ui-icons_222222_256x240.png',\r\n        darkGrey: ImageSrc_self + 'jquery/ui-icons_454545_256x240.png',\r\n        grey: ImageSrc_self + 'jquery/ui-icons_888888_256x240.png',\r\n        red: ImageSrc_self + 'jquery/ui-icons_cd0a0a_256x240.png'\r\n    },\r\n    legacy: {\r\n        helpBackground: ImageSrc_self + 'legacy/help_background.png',\r\n        helpBackgroundBright: ImageSrc_self + 'legacy/help_background_highlight.png'\r\n    },    \r\n    buildingIcon: buildingType => game + `buildings/${buildingType}.png`,\r\n    troopIcon: troopType => game + `unit/unit_${troopType}.png`,\r\n    dotIcon: color => game + `dots/${color}.png`,\r\n    scavengeOption: optionId => game + `scavenging/options/${optionId}.png`,\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/UI.js\n\r\n\r\n\r\nfunction escapeHtml(text) {\r\n    if (typeof text !== 'string') {\r\n        text = String(text);\r\n    }\r\n    // https://stackoverflow.com/a/4835406\r\n    var map = {\r\n      '&': '&amp;',\r\n      '<': '&lt;',\r\n      '>': '&gt;',\r\n      '\"': '&quot;',\r\n      \"'\": '&#039;'\r\n    };  \r\n    return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n}\r\n\r\n////// css //////\r\n\r\nlet cssInitd = new Set();\r\n\r\nfunction initCss(css) {\r\n    if (cssInitd.has(css)) {\r\n        return;\r\n    }\r\n    $(`<style>${css}</style>`).appendTo('head');\r\n    cssInitd.add(css);\r\n}\r\n\r\ninitCss(`\r\n    .twcheese-popup {\r\n        z-index: 13000;\r\n        display: block;\r\n        position: fixed;\r\n        top: 60px;\r\n        border: 19px solid #804000;\r\n        border-image: url(${ImageSrc.popupBorder}) 19 19 19 19 repeat;\r\n        left: 50%;\r\n        -webkit-transform: translateX(-50%);\r\n        transform: translateX(-50%);\r\n    }\r\n`);\r\n\r\n//////// faders ///////////\r\n\r\n\r\nfunction fadeGameContent () {\r\n    $('body').append('<div id=\"fader\" class=\"fader\">');\r\n};\r\n\r\n\r\nfunction unfadeGameContent() {\r\n    $('#fader').remove();\r\n    $('.twcheese-fader').remove();\r\n}\r\n\r\n\r\nfunction fadeGameContentExcept(el) {\r\n    let $el = $(el);\r\n\r\n    if ($el.length < 1) {\r\n        throw new Error('element does not exist');\r\n    }\r\n    if ($el.length > 1) {\r\n        throw new Error('expected exactly one element, got more');\r\n    }\r\n\r\n    let $faderLeft = spawnFader();\r\n    let $faderRight = spawnFader();\r\n    let $faderTopMenu = spawnFader();\r\n    let $faderTopScreen = spawnFader();\r\n    let $faderBottomScreen = spawnFader();\r\n    let $faderBottomMenu = spawnFader();\r\n\r\n    var $bottomMenu = $('#footer');\r\n    var $topMenu = $('#topContainer');\r\n    var topMenuHeight, screenWidth, screenHeight;\r\n\r\n    function updateMeasurements() {\r\n        topMenuHeight = $topMenu.outerHeight() + 3;\r\n        screenWidth = $('body').outerWidth();\r\n        screenHeight = Math.max($('#ds_body')[0].scrollHeight, document.documentElement.clientHeight);\r\n    }\r\n\r\n    function updateFaders() {\r\n        updateMeasurements();\r\n        updateFaderLeft();\r\n        updateFaderRight();\r\n        updateFaderTopMenu();\r\n        updateFaderTopScreen();\r\n        updateFaderBottomScreen();\r\n        updateFaderBottomMenu();\r\n    }\r\n\r\n\r\n    function updateFaderLeft() {\r\n        let offset = $el.offset();\r\n        $faderLeft.css({\r\n            top: 0,\r\n            left: 0,\r\n            width: offset.left,\r\n            height: screenHeight\r\n        });\r\n    }\r\n\r\n\r\n    function updateFaderRight() {\r\n        let offset = $el.offset();\r\n        $faderRight.css({\r\n            top: 0,\r\n            right: 0,\r\n            width: screenWidth - $el.outerWidth() - offset.left,\r\n            height: screenHeight\r\n        });\r\n    }\r\n\r\n\r\n    function updateFaderTopScreen() {\r\n        let offset = $el.offset();\r\n        $faderTopScreen.css({\r\n            top: topMenuHeight,\r\n            left: offset.left,\r\n            height: offset.top - topMenuHeight,\r\n            width: $el.outerWidth(),\r\n            zIndex: $('.top_bar').zIndex() - 1\r\n        });\r\n    }\r\n\r\n\r\n    function updateFaderBottomScreen() {\r\n        let offset = $el.offset();\r\n        $faderBottomScreen.css({\r\n            top: offset.top + $el.outerHeight(),\r\n            left: offset.left,\r\n            height: screenHeight - offset.top - $el.outerHeight(),\r\n            width: $el.outerWidth(),\r\n            zIndex: $bottomMenu.zIndex() - 1\r\n        });\r\n    }\r\n\r\n\r\n    function updateFaderTopMenu() {\r\n        let offset = $el.offset();\r\n        $faderTopMenu.css({\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: offset.left,\r\n            height: topMenuHeight,\r\n            width: $el.outerWidth()\r\n        });\r\n    }\r\n\r\n\r\n    function updateFaderBottomMenu() {\r\n        let offset = $el.offset();\r\n        $faderBottomMenu.css({\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: offset.left,\r\n            height: $bottomMenu.outerHeight(),\r\n            width: $el.outerWidth()\r\n        });\r\n    }\r\n\r\n\r\n    function spawnFader() {\r\n        let css = {\r\n            position: 'absolute',\r\n            background: 'black',\r\n            opacity: 0.5,\r\n            zIndex: 12000\r\n        };\r\n        return $('<div class=\"twcheese-fader\"></div>').css(css).appendTo($('body'));\r\n    }\r\n\r\n    updateFaders();\r\n    $(window).on('resize', updateFaders);\r\n}\r\n\r\n\r\n// mousetrap ///////////////////////////////\r\n\r\nlet mouseEvents = ['click', 'mousemove', 'mousenter', 'mouseleave', 'mouseover', 'mouseout', 'mousedown', 'mouseup'];\r\nlet mouseBubbleEvents = new Set(['click', 'mousemove', 'mouseover', 'mouseout', 'mousedown', 'mouseup']);\r\nlet mouseEventsNeedSpecial = new Set(['mousenter', 'mouseleave', 'mouseover', 'mouseout']);\r\n\r\nclass Mousetrap {\r\n    constructor() {\r\n        this.$trap = $('<div class=\"twcheese-mousetrap\">').css({\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            background: 'cyan',\r\n            opacity: 0.001,\r\n            zIndex: 12000\r\n        })\r\n        this.prevIntendedTarget;\r\n\r\n        this.watchers = {\r\n            // example:\r\n            // click: [{$elements, handler}, {$elements, handler}]\r\n            mouseout: []\r\n        }\r\n\r\n        this.setupHandling();\r\n    }\r\n\r\n    spawn() {\r\n        this.$trap.appendTo('body');\r\n        return this;\r\n    }\r\n\r\n    destruct() {\r\n        this.$trap.remove();\r\n    }\r\n\r\n    setupHandling() {\r\n        let trapEvents = mouseEvents.filter(name => !mouseEventsNeedSpecial.has(name));\r\n\r\n        this.$trap.on(trapEvents.join(' '), (e) => {\r\n            this.$trap.hide();\r\n            let intendedTarget = document.elementFromPoint(e.offsetX, e.offsetY);\r\n            this.$trap.show();\r\n\r\n            this.notifyWatchers(e.type, e, intendedTarget);\r\n\r\n            if (e.type === 'mousemove' && intendedTarget !== this.prevIntendedTarget) {\r\n                this.notifyWatchers('mousenter', e, intendedTarget);\r\n                this.notifyWatchers('mouseleave', e, this.prevIntendedTarget);\r\n                this.notifyWatchers('mouseover', e, intendedTarget);\r\n\r\n                // mouseout\r\n                for (let watcher of this.watchers.mouseout) {\r\n                    watcher.$elements.each((i, el) => {\r\n                        if (\r\n                            this.doesElMatch(el, 'mouseover', this.prevIntendedTarget)\r\n                            && !this.doesElMatch(el, 'mouseover', intendedTarget)\r\n                        ) {\r\n                            watcher.handler.call(el, e);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.prevIntendedTarget = intendedTarget;\r\n        });\r\n    }\r\n\r\n    notifyWatchers(eventName, e, intendedTarget) {\r\n        if (typeof this.watchers[eventName] === 'undefined') {\r\n            return;\r\n        }\r\n        for (let watcher of this.watchers[eventName]) {\r\n            watcher.$elements.each((i, el) => {\r\n                if (this.doesElMatch(el, eventName, intendedTarget)) {\r\n                    watcher.handler.call(el, e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    doesElMatch(el, eventName, intendedTarget) {\r\n        return el === intendedTarget\r\n        || (mouseBubbleEvents.has(eventName) && $.contains(el, intendedTarget));\r\n    }\r\n\r\n    on(eventName, $elements, handler) {\r\n        if (typeof this.watchers[eventName] === 'undefined') {\r\n            this.watchers[eventName] = [];\r\n        }\r\n        this.watchers[eventName].push({$elements, handler});\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Prompt/suggestRedirect.js\n\r\n\r\n\r\n\r\nfunction suggestRedirect(options) {\r\n    let { message, screen, screenName, uriParams, skippableId } = options;\r\n    message = message || '{{Some genius forgot to write a message here}}';\r\n    screenName = screenName || '{{Screen Name goes here}}';\r\n    uriParams = uriParams || {};\r\n    if (!screen) {\r\n        throw Error('screen must be specified!');\r\n    }\r\n\r\n    if (skippableId && userConfig.get(skipKey(skippableId), false)) {\r\n        window.UI.InfoMessage(`Redirecting to <strong>${screenName}</strong>...`);\r\n        setTimeout(() => window.TribalWars.redirect(screen, uriParams), 200);        \r\n        return;\r\n    }    \r\n\r\n    let buttonConfirm = {\r\n        text: 'Take me there!',\r\n        callback: () => {\r\n            if (skippableId) {\r\n                let skipNextTime = $('#twcheese-suggest-redirect-skip').prop('checked');\r\n                userConfig.set(skipKey(skippableId), skipNextTime);\r\n            }\r\n            window.TribalWars.redirect(screen, uriParams);\r\n        },\r\n        confirm: true\r\n    };\r\n    let buttonCancel = {\r\n        text: 'Whatever...',\r\n        callback: () => {}\r\n    };\r\n    window.UI.ConfirmationBox(buildContent(message, options), [buttonConfirm, buttonCancel], 'twcheese_suggest_redirect', true, true);\r\n}\r\n\r\n\r\nfunction skipKey(skippableId) {\r\n    return 'suggestRedirect.skip.' + skippableId;\r\n}\r\n\r\n\r\nfunction buildContent(message, options) {\r\n    let html = message;\r\n    if (options.skippableId) {\r\n        html += `<div class=\"twcheese-suggest-redirect-skip-container\">\r\n            <input id=\"twcheese-suggest-redirect-skip\" type=\"checkbox\">\r\n            <span>Don't ask, just take me there next time.</span>\r\n        </div>`\r\n    }\r\n    return html;\r\n}\r\n\r\n\r\ninitCss(`\r\n    .twcheese-suggest-redirect-skip-container {\r\n        margin-top: 20px;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .twcheese-suggest-redirect-skip-container > * {\r\n        vertical-align: middle;\r\n    }\r\n`);\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeOption.js\n\r\n\r\nclass ScavengeOption {\r\n\r\n    constructor(base) {\r\n        this.base = base;\r\n        this.id = base.id;\r\n    }\r\n\r\n    getName() {\r\n        return this.base.name;\r\n    }\r\n\r\n    getLootPercent() {\r\n        return this.base.loot_factor * 100;\r\n    }\r\n\r\n    getLootFactor() {\r\n        return this.base.loot_factor;\r\n    }\r\n\r\n    calcDurationSeconds(squadCapacity) {\r\n        let base = (squadCapacity ** 2) * this.getLootPercent() * this.base.loot_factor;\r\n        let preDuration = Math.pow(base, this.base.duration_exponent) + this.base.duration_initial_seconds\r\n        return Math.round(preDuration * this.base.duration_factor);\r\n    }\r\n\r\n    calcTargetCapacity(durationSeconds) {\r\n        let preDuration = durationSeconds / this.base.duration_factor;\r\n        let base = (preDuration - this.base.duration_initial_seconds) ** (1 / this.base.duration_exponent);\r\n        return Math.round(Math.sqrt(base / this.getLootPercent() / this.base.loot_factor));\r\n    }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Troops.js\n\r\n\r\nlet Troops_troopTypes = ['spear', 'sword', 'axe', 'archer', 'spy', 'light', 'marcher', 'heavy', 'ram', 'catapult', 'knight', 'snob', 'militia'];\r\n\r\n\r\nfunction troopPop(troopType) {\r\n    let troop = troopConfig.get(troopType);\r\n    if (typeof troop === 'undefined') {\r\n        return 0;\r\n    }\r\n    return troop.pop;\r\n}\r\n\r\n\r\nfunction travelMinutes(troopType) {\r\n    let troop = troopConfig.get(troopType);\r\n    if (typeof troop === 'undefined') {\r\n        return 0;\r\n    }\r\n    return troop.speed;\r\n}\r\n\r\n\r\nfunction troopCarry(troopType) {\r\n    let troop = troopConfig.get(troopType);\r\n    if (typeof troop === 'undefined') {\r\n        return 0;\r\n    }\r\n    return troop.carry;\r\n}\r\n\r\n\r\nclass TroopCounts {\r\n    constructor() {\r\n        for (let type of Troops_troopTypes) {\r\n            this[type] = 0;\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        return Object.assign(new TroopCounts(), this);\r\n    }\r\n\r\n    filter(allowedTroopTypes) {\r\n        let counts = new TroopCounts();\r\n        for (let type of Troops_troopTypes) {\r\n            if (allowedTroopTypes.includes(type)) {\r\n                counts[type] = this[type];\r\n            }\r\n        }\r\n        return counts;\r\n    }\r\n\r\n    isZero() {        \r\n        for (let count of Object.values(this)) {\r\n            if (count !== 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    sum() {\r\n        let sum = 0;\r\n        for (let count of Object.values(this)) {\r\n            sum += count;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    /**\r\n     * @param {function} doSomething - receives two params: troopType and count\r\n     */\r\n    each(doSomething) {\r\n        for (let type of Troops_troopTypes) {\r\n            let count = this[type];\r\n            doSomething(type, count);\r\n        }\r\n    }\r\n\r\n    carryCapacity() {\r\n        let capacity = 0;\r\n        for (let type of Troops_troopTypes) {\r\n            capacity += this[type] * troopCarry(type);\r\n        }\r\n        return capacity;\r\n    }\r\n\r\n    populationUsed() {\r\n        return Troops_troopTypes.reduce((sum, type) => sum + troopPop(type) * this[type], 0);\r\n    }\r\n\r\n    travelDuration(distance, role = 'attack') {\r\n        let minutesPerField = this.travelMinutesPerField(role);\r\n        return calcTravelDuration(minutesPerField, distance);\r\n    }\r\n\r\n    travelMinutesPerField(role = 'attack') {\r\n        if (role === 'support' && this.knight > 0) {\r\n            return travelMinutes('knight');\r\n        }\r\n\r\n        let relevantMinutes = Troops_troopTypes\r\n            .filter(type => this[type] > 0)\r\n            .map(type => travelMinutes(type));\r\n\r\n        return Math.max(...relevantMinutes);\r\n    }\r\n\r\n    /**\r\n     * @param {TroopCounts} subtrahend\r\n     * @return {TroopCounts} difference\r\n     */\r\n    subtract(subtrahend) {\r\n        let difference = new TroopCounts();\r\n        for (let [troopType, count] of Object.entries(this)) {\r\n            difference[troopType] = count - subtrahend[troopType];\r\n        }\r\n        return difference;\r\n    }\r\n\r\n    /**\r\n     * get new TroopCounts, like this one but with any negative counts set to 0\r\n     */\r\n    zeroNegatives() {\r\n        let troopCounts = new TroopCounts();\r\n        for (let [troopType, count] of Object.entries(this)) {\r\n            troopCounts[troopType] = Math.max(0, count);\r\n        }\r\n        return troopCounts;\r\n    }\r\n\r\n    toArray() {\r\n        return Troops_troopTypes.map(type => this[type]);\r\n    }\r\n\r\n    static fromArray(array) {\r\n        let troops = new TroopCounts();\r\n        array.forEach((count, i) => {\r\n            troops[Troops_troopTypes[i]] = count;\r\n        });\r\n        return troops;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n *\t@param {number} distance\r\n *\t@return\t{{spear:number, sword:number, ...}} milliseconds\r\n */\r\nfunction calcTravelDurations(distance) {\r\n    let travelTimes = {};\r\n    for (let type of Troops_troopTypes) {\r\n        travelTimes[type] = calcTravelDuration(travelMinutes(type), distance);\r\n    }\r\n    return travelTimes;\r\n};\r\n\r\n\r\nfunction calcTravelDuration(minutesPerField, distance) {\r\n    // The game rounds travel duration to the nearest second.\r\n    // The milliseconds part of the scheduled arrival is NOT some fraction of travel seconds.\r\n    // But rather, copied from the clock when the server started processing the request to travel.\r\n    //\r\n    // e.g. The clock says its 12:30:00.123.\r\n    // The server processes a request for troops to travel somewhere that takes them 10 minutes to reach.\r\n    // The scheduled arrival will be 12:40:00.123\r\n    return Math.round(distance * minutesPerField * 60) * 1000;\r\n}\r\n\r\n\r\nlet Troops_troopUtil = {\r\n\r\n    troopTypesOnWorld() {\r\n        return window.game_data.units;\r\n    },\r\n\r\n    existsOnWorld(troopType) {\r\n        return typeof troopConfig.get(troopType) !== 'undefined';\r\n    },\r\n\r\n    /** \r\n     * @param {string} troopType\r\n     * @param {number} resourceAmount     \r\n     * @param {number} haulBonus the extra % bonus haul from flags, events, etc. Example: 30 for 30%, NOT 0.3\r\n     * @return {number} how many troops does it take to carry all the resources\r\n     */\r\n    countToCarry(troopType, resourceAmount, haulBonus = 0) {\r\n        let haulPerUnit = troopCarry(troopType) * (100 + haulBonus) / 100;\r\n        let troopCount = resourceAmount / haulPerUnit;\r\n        return Math.round(10 * troopCount) / 10;\r\n    },\r\n\r\n    carryCapacity(troopType, factor = 1.0) {\r\n        return troopCarry(troopType) * factor;\r\n    },\r\n\r\n    /**\r\n     * @param {string} troopType\r\n     * @param {number} distance\r\n     * @return {number} milliseconds to travel\r\n     */\r\n    travelDuration(troopType, distance) {\r\n        return calcTravelDuration(travelMinutes(troopType), distance);\r\n    }\r\n\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Scrape/scavenge.js\n\r\n\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {TroopCounts}\r\n */\r\nfunction scrapeAvailableTroopCounts(gameDoc) {\r\n    let availableCounts = new TroopCounts();\r\n    $(gameDoc).find('.units-entry-all').each(function() {\r\n        let troopType = this.dataset.unit;\r\n        availableCounts[troopType] = parseInt(this.innerHTML.match(/\\d+/)[0]);\r\n    });\r\n    return availableCounts;\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {int[]}\r\n */\r\nfunction scrapeUsableOptionIds(gameDoc) {\r\n    let usableIds = [];\r\n\r\n    $(gameDoc).find('.scavenge-option').has('.free_send_button:not(.btn-disabled)').each(function() {\r\n        let [, id] = $(this).find('.portrait').css('background-image').match(/options\\/(\\d).png/);\r\n        usableIds.push(parseInt(id));\r\n    });\r\n\r\n    return usableIds;\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {object}\r\n */\r\nfunction scrapeScavengeModels(gameDoc) {\r\n    let data = scrapeScavengeData(gameDoc);\r\n    let optionBases = data.optionsConfig;\r\n\r\n    let options = new Map();\r\n    for (let optionId of Object.keys(optionBases)) {\r\n        options.set(parseInt(optionId), new ScavengeOption(optionBases[optionId]));\r\n    }\r\n\r\n    return {\r\n        options,\r\n        sendableTroopTypes: Object.keys(data.troops),\r\n        haulFactor: data.village.unit_carry_factor\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc \r\n */\r\nfunction scrapeScavengeData(gameDoc) {\r\n    let jsCode = findScavengeScreenJsCode(gameDoc);\r\n\r\n    let paramCode = findScavengeScreenParamCode(jsCode);\r\n    let dataFromParams = parseScavengeScreenParamCode(paramCode);\r\n    \r\n    let villageCode = findVillageCode(jsCode);\r\n\r\n    return {\r\n        optionsConfig: dataFromParams.optionsConfig,\r\n        troops: dataFromParams.troops,\r\n        village: JSON.parse(villageCode)\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc \r\n */\r\nfunction findScavengeScreenJsCode(gameDoc) {\r\n    let scripts = gameDoc.getElementsByTagName('script');\r\n    \r\n    for (let script of scripts) {\r\n        let code = script.innerHTML;\r\n        if (code.includes('new ScavengeScreen')) {\r\n            return code;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} jsCode\r\n * @return {string}\r\n */\r\nfunction findScavengeScreenParamCode(jsCode) {\r\n    let search = 'new ScavengeScreen';\r\n    let startIndex = jsCode.indexOf(search) + search.length;\r\n    return wrappedCode(jsCode, startIndex, '(', ')');\r\n}\r\n\r\n\r\n/**\r\n * @param {string} paramCode \r\n */\r\nfunction parseScavengeScreenParamCode(paramCode) {\r\n    let optionsConfigStartIndex = paramCode.indexOf('{');\r\n    let optionsConfigCode = wrappedCode(paramCode, optionsConfigStartIndex, '{', '}');\r\n\r\n    let troopsCode;\r\n    let troopsStartIndex = optionsConfigStartIndex + optionsConfigCode.length;\r\n    for (; troopsStartIndex < paramCode.length; troopsStartIndex++) {\r\n        if (paramCode[troopsStartIndex] === '{') {\r\n            troopsCode = wrappedCode(paramCode, troopsStartIndex, '{', '}');\r\n            break;\r\n        }\r\n    }\r\n\r\n    return {\r\n        optionsConfig: JSON.parse(optionsConfigCode),\r\n        troops: JSON.parse(troopsCode)\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * @param {string} jsCode\r\n * @return {string}\r\n */\r\nfunction findVillageCode(jsCode) {\r\n    let search = 'var village = ';\r\n    let startIndex = jsCode.indexOf(search) + search.length;\r\n    return wrappedCode(jsCode, startIndex, '{', '}');\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string \r\n * @param {number} firstParenIndex \r\n * @param {string} openingChar \r\n * @param {string} closingChar \r\n * @return {string}\r\n */\r\nfunction wrappedCode(string, firstParenIndex, openingChar = '(', closingChar = ')') {\r\n    let openingParens = 1;\r\n    let closingParens = 0;\r\n    let lastParenIndex = -1;\r\n    \r\n    for (let i = firstParenIndex + 1; i < string.length; i++) {\r\n        let char = string[i];\r\n        if (char === openingChar) {\r\n            openingParens++;\r\n        }\r\n        if (char === closingChar) {\r\n            closingParens++;\r\n            lastParenIndex = i;\r\n        }\r\n        if (closingParens === openingParens) {\r\n            return string.substring(firstParenIndex, lastParenIndex + 1);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeTroopsAssignerPreferences.js\n\r\n\r\n\r\nclass ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences {\r\n\r\n    constructor(sendableTroopTypes) {\r\n        this._sendableTroopTypes = sendableTroopTypes;\r\n        this.reset();        \r\n    }\r\n\r\n    reset() {\r\n        this.mode = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON;\r\n        this.allowedOptionIds = new Set([1, 2, 3, 4]);\r\n        this.targetDurationSeconds = 2 * 3600;\r\n        this.initTroops();\r\n        this.troopOrder = [\r\n            ['axe', 'light', 'marcher'], // first chunk (sent together)\r\n            ['spear', 'sword', 'archer'], // second chunk (sent together)\r\n            ['heavy'], // third chunk\r\n            ['knight']\r\n        ];\r\n    }\r\n\r\n    initTroops() {\r\n        this.troops = {};\r\n        for (let troopType of this._sendableTroopTypes) {\r\n            this.troops[troopType] = {\r\n                maySend: true,\r\n                reserved: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    setMode(mode) {\r\n        this.mode = mode;\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    isOptionAllowed(optionId) {\r\n        return this.allowedOptionIds.has(optionId);\r\n    }\r\n\r\n    setOptionAllowed(optionId, isAllowed = true) {\r\n        if (isAllowed) {\r\n            this.allowedOptionIds.add(optionId);\r\n        } else {\r\n            this.allowedOptionIds.delete(optionId);\r\n        }\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    setTargetDuration(seconds) {\r\n        this.targetDurationSeconds = seconds;\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    /**\r\n     * @return {string[]}\r\n     */\r\n    getAllowedTroopTypes() {\r\n        return this._sendableTroopTypes.filter(troopType => this.troops[troopType].maySend);\r\n    }\r\n\r\n    isTroopTypeAllowed(troopType) {\r\n        return this.troops[troopType].maySend;\r\n    }\r\n\r\n    setTroopAllowed(troopType, isAllowed) {\r\n        this.troops[troopType].maySend = isAllowed;\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    /**\r\n     * @return TroopCounts\r\n     */\r\n    getReservedTroopCounts() {\r\n        let troopCounts = new TroopCounts();\r\n        for (let troopType of this._sendableTroopTypes) {\r\n            troopCounts[troopType] = this.troops[troopType].reserved;\r\n        }\r\n        return troopCounts;\r\n    }\r\n\r\n    getReservedCount(troopType) {\r\n        return this.troops[troopType].reserved;\r\n    }\r\n\r\n    setReservedCount(troopType, count) {\r\n        this.troops[troopType].reserved = count;\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    setTroopOrder(troopOrder) {\r\n        this.troopOrder = troopOrder;\r\n        $(this).trigger('change');\r\n    }\r\n\r\n    export() {\r\n        return {\r\n            mode: this.mode,\r\n            allowedOptionIds: [...this.allowedOptionIds.values()],\r\n            targetDurationSeconds: this.targetDurationSeconds,\r\n            troops: this.troops,\r\n            troopOrder: this.troopOrder\r\n        }\r\n    }\r\n\r\n    import(exported) {\r\n        this.mode = exported.mode;\r\n        this.allowedOptionIds = new Set(exported.allowedOptionIds);\r\n        this.targetDurationSeconds = exported.targetDurationSeconds;\r\n        this.troops = exported.troops;\r\n        this.troopOrder = exported.troopOrder;\r\n    }\r\n\r\n}\r\n\r\nScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON = 'sane_person';\r\nScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT = 'addict';\r\nScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_EFFICIENT = 'split';\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeTroopsAssigner.js\n\r\n\r\n\r\nclass ScavengeTroopsAssigner_ScavengeTroopsAssigner {\r\n\r\n    /**\r\n     * @param {Map<number, ScavengeOption>} options \r\n     * @param {string[]} sendableTroopsTypes\r\n     * @param troopUtil\r\n     */\r\n    constructor(options, sendableTroopTypes, troopUtil) {\r\n        this.options = options;\r\n        this.sendableTroopTypes = sendableTroopTypes;\r\n        this.troopUtil = troopUtil;\r\n        this.preferences = new ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences(sendableTroopTypes);\r\n    }\r\n\r\n    /**\r\n     * @return TroopCounts\r\n     */\r\n    adjustAvailableTroopCounts(availableTroopCounts) {\r\n        return availableTroopCounts\r\n            .filter(this.preferences.getAllowedTroopTypes())\r\n            .subtract(this.preferences.getReservedTroopCounts())\r\n            .zeroNegatives();\r\n    }\r\n\r\n    /**\r\n     * @param {int[]} usableOptionIds \r\n     */\r\n    adjustUsableOptionIds(usableOptionIds) {\r\n        return usableOptionIds.filter(optionId => this.preferences.isOptionAllowed(optionId));\r\n    }\r\n\r\n    /**\r\n     * @param {TroopCounts} availableTroopCounts \r\n     */\r\n    areTroopsSufficient(availableTroopCounts) {\r\n        availableTroopCounts = this.adjustAvailableTroopCounts(availableTroopCounts);\r\n        return availableTroopCounts.populationUsed() >= 10;\r\n    }\r\n\r\n    /**\r\n     * @param {int[]} usableOptionIds \r\n     * @param {TroopCounts} availableTroopCounts\r\n     * @param {float} haulFactor\r\n     */\r\n    assignTroops(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n        usableOptionIds = this.adjustUsableOptionIds(usableOptionIds);\r\n        availableTroopCounts = this.adjustAvailableTroopCounts(availableTroopCounts);\r\n\r\n        if (this.preferences.mode === ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT) {\r\n            return this.assignTroopsForAddict(usableOptionIds, availableTroopCounts, haulFactor);\r\n        }\r\n        if (this.preferences.mode === ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_EFFICIENT) {\r\n            return this.assignTroopsForEfficientPerson(usableOptionIds, availableTroopCounts, haulFactor);\r\n        }\r\n        return this.assignTroopsForSanePerson(usableOptionIds, availableTroopCounts, haulFactor);\r\n    }\r\n\r\n    /**\r\n     * @param {number[]} usableOptionIds \r\n     * @param {TroopCounts} availableTroopCounts \r\n     * @param {float} haulFactor\r\n     * @return {Map<number, TroopCounts>}\r\n     */\r\n    assignTroopsForSanePerson(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n        let assignedCountsByOption = new Map();\r\n        let optionIds = [...this.options.keys()].reverse();\r\n\r\n        for (let optionId of optionIds) {\r\n            let assignedCounts;\r\n            if (usableOptionIds.includes(optionId)) {\r\n                let option = this.options.get(optionId);\r\n                let targetCapacity = option.calcTargetCapacity(this.preferences.targetDurationSeconds);\r\n                assignedCounts = this.chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor);\r\n            } else {\r\n                assignedCounts = new TroopCounts();\r\n            }            \r\n            assignedCountsByOption.set(optionId, assignedCounts);\r\n            availableTroopCounts = availableTroopCounts.subtract(assignedCounts);\r\n        }\r\n\r\n        return assignedCountsByOption;\r\n    }\r\n\r\n    /**\r\n     * @param {number[]} usableOptionIds \r\n     * @param {TroopCounts} availableTroopCounts \r\n     * @param {float} haulFactor\r\n     * @return {Map<number, TroopCounts>}\r\n     */\r\n    assignTroopsForEfficientPerson(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n        let assignedCountsByOption = new Map();\r\n        let optionIds = [...this.options.keys()].reverse();\r\n\r\n        \r\n        let targetDurationSeconds = this.preferences.targetDurationSeconds;\r\n        let numberOfUsableOptions = usableOptionIds.length;\r\n\r\n        for (let optionId of optionIds) {\r\n            let assignedCounts;\r\n            if (usableOptionIds.includes(optionId)) {\r\n                let availableCapacity = availableTroopCounts.carryCapacity() * haulFactor;\r\n                let splitCapacity = availableCapacity / numberOfUsableOptions;\r\n                let option = this.options.get(optionId);\r\n                let maxCapacity = option.calcTargetCapacity(targetDurationSeconds);\r\n                let targetCapacity = Math.min(splitCapacity, maxCapacity);\r\n                assignedCounts = this.chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor);\r\n                numberOfUsableOptions -= 1;\r\n            } else {\r\n                assignedCounts = new TroopCounts();\r\n            }\r\n            assignedCountsByOption.set(optionId, assignedCounts);\r\n            availableTroopCounts = availableTroopCounts.subtract(assignedCounts);\r\n            \r\n        }\r\n\r\n        return assignedCountsByOption;\r\n    }\r\n\r\n    /**\r\n     * @param {number[]} usableOptionIds \r\n     * @param {TroopCounts} availableTroopCounts \r\n     * @param {float} haulFactor\r\n     * @return {Map<number, TroopCounts>}\r\n     */\r\n    assignTroopsForAddict(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n        let assignedCountsByOption = new Map();\r\n        let optionIds = [...this.options.keys()].reverse();\r\n\r\n        let availableCapacity = availableTroopCounts.carryCapacity() * haulFactor;\r\n        let targetDurationSeconds = this.preferences.targetDurationSeconds;\r\n\r\n        let targetCapacitySum = 0;\r\n        let inverseLootFactors = {};\r\n        let inverseLootFactorSum = 0;\r\n\r\n        for (let optionId of optionIds) {\r\n            if (!usableOptionIds.includes(optionId)) {\r\n                continue;\r\n            }\r\n            let option = this.options.get(optionId);\r\n            inverseLootFactors[optionId] = 1 / option.getLootFactor()\r\n            inverseLootFactorSum += inverseLootFactors[optionId];\r\n            targetCapacitySum += option.calcTargetCapacity(targetDurationSeconds);\r\n        }\r\n\r\n        let portionAvailableTroopsOverall = Math.min(1, targetCapacitySum / availableCapacity);\r\n\r\n        for (let optionId of optionIds) {\r\n            let assignedCounts;\r\n            if (usableOptionIds.includes(optionId)) {\r\n                let portionOfOptionFactors = inverseLootFactors[optionId] / inverseLootFactorSum;\r\n                let portionAvailableTroopsForOption = portionAvailableTroopsOverall * portionOfOptionFactors;\r\n                let targetCapacity = portionAvailableTroopsForOption * availableCapacity;\r\n                assignedCounts = this.chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor);\r\n            } else {\r\n                assignedCounts = new TroopCounts();\r\n            }            \r\n            assignedCountsByOption.set(optionId, assignedCounts);\r\n            availableTroopCounts = availableTroopCounts.subtract(assignedCounts);\r\n        }\r\n\r\n        return assignedCountsByOption;\r\n    }\r\n\r\n    chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor = 1.0) {\r\n        let assignedTroopCounts = new TroopCounts();\r\n        let capacities = {};\r\n        for (let chunk of this.preferences.troopOrder) {            \r\n            if (targetCapacity < 0) {\r\n                break;\r\n            }\r\n\r\n            let availableCapacity = 0;\r\n            for (let troopType of chunk) {\r\n                let troopCount = availableTroopCounts[troopType];\r\n                capacities[troopType] = this.troopUtil.carryCapacity(troopType, haulFactor);\r\n                availableCapacity += troopCount * capacities[troopType];\r\n            }\r\n            let chunkRatio = Math.min(1, targetCapacity / availableCapacity);\r\n\r\n            for (let troopType of chunk) {\r\n                let troopCount = availableTroopCounts[troopType];                \r\n                assignedTroopCounts[troopType] = Math.floor(troopCount * chunkRatio);\r\n                targetCapacity -= assignedTroopCounts[troopType] * capacities[troopType];\r\n            }\r\n\r\n            if (targetCapacity > 0) {\r\n                this.troopsToTopOff(targetCapacity, availableTroopCounts, assignedTroopCounts, chunk, capacities)\r\n                    .each(function(troopType, count) {\r\n                        targetCapacity -= count * (capacities[troopType] || 0);\r\n                        assignedTroopCounts[troopType] += count;\r\n                    });\r\n            }\r\n\r\n        }\r\n        return assignedTroopCounts;\r\n    }\r\n\r\n    /**\r\n     * @param {int} targetCapacity \r\n     * @param {TroopCounts} availableTroopCounts \r\n     * @param {TroopCounts} assignedTroopCounts \r\n     * @param {string[]} troopTypes\r\n     * @return {TroopCounts}\r\n     */\r\n    troopsToTopOff(targetCapacity, availableTroopCounts, assignedTroopCounts, troopTypes, capacities) {\r\n        let extraCounts = new TroopCounts();\r\n\r\n        while (targetCapacity > 0) {\r\n            let unassignedExists = false;\r\n            let closestType = null;\r\n            let smallestDiff = Number.MAX_SAFE_INTEGER;\r\n            \r\n            for (let troopType of troopTypes) {\r\n                if (availableTroopCounts[troopType] > assignedTroopCounts[troopType] + extraCounts[troopType]) {\r\n                    unassignedExists = true;\r\n\r\n                    let diff = Math.abs(targetCapacity - capacities[troopType]);\r\n                    if (diff < smallestDiff) {\r\n                        smallestDiff = diff;\r\n                        closestType = troopType;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!unassignedExists) {\r\n                break;\r\n            }\r\n\r\n            if (targetCapacity < Math.abs(targetCapacity - capacities[closestType])) {\r\n                // adding more troops would put us farther from the target than we already are\r\n                break;\r\n            }\r\n            extraCounts[closestType] += 1;\r\n            targetCapacity -= capacities[closestType];\r\n        }\r\n\r\n        return extraCounts;\r\n    }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Widget/AbstractWidget.js\n\r\nfunction afterDOMInsert(el, callback) {\r\n    let observer = new MutationObserver((mutations) => {\r\n        outerloop:\r\n            for (let mutation of mutations) {\r\n                for (let node of mutation.addedNodes) {\r\n                    if (node === el || node.contains(el)) {\r\n                        setTimeout(callback, 0);\r\n                        observer.disconnect();\r\n                        break outerloop;\r\n                    }\r\n                }\r\n            }\r\n    });\r\n\r\n    observer.observe(document, {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n}\r\n\r\n\r\nclass AbstractWidget {\r\n\r\n    insertBefore(el) {\r\n        this._beforeInsert();\r\n        $(el).before(this.$el);\r\n        return this;\r\n    }\r\n\r\n    insertAfter(el) {\r\n        this._beforeInsert();\r\n        $(el).after(this.$el);\r\n        return this;\r\n    }\r\n\r\n    appendTo(el) {\r\n        this._beforeInsert();\r\n        $(el).append(this.$el);\r\n        return this;\r\n    }\r\n\r\n    _beforeInsert() {\r\n        if (typeof this.afterInsert !== 'function') {\r\n            return;\r\n        }\r\n        let el = this.$el[0];\r\n        afterDOMInsert(el, () => this.afterInsert());\r\n    }\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/Widget/ScavengePreferencesWidget.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ScavengePreferencesWidget_ScavengePreferencesWidget extends AbstractWidget {\r\n\r\n    /**\r\n     * @param {ScavengeTroopsAssignerPreferences} preferences\r\n     * @param {Map<ScavengeOption>} scavengeOptions\r\n     * @param {string[]} sendableTroopTypes\r\n     */\r\n    constructor(preferences, scavengeOptions, sendableTroopTypes) {\r\n        super();\r\n        this.preferences = preferences;\r\n        this.scavengeOptions = scavengeOptions;\r\n        this.sendableTroopTypes = sendableTroopTypes;\r\n        this.initStructure();\r\n        this.initTroopOrder();\r\n        this.watchSelf();\r\n    }\r\n\r\n    initStructure() {\r\n        this.$el = $(this.createHtml().trim());\r\n        this.$targetDuration = this.$el.find('.target-duration');\r\n        this.$options = this.$el.find('.options-section input');\r\n        this.$modes = this.$el.find(`input[name='mode']`);\r\n        this.$troopsAllowed = this.$el.find('.troop-allowed');\r\n        this.$troopsReserved = this.$el.find('.troop-reserved');\r\n        this.$troopGroups = this.$el.find('.troop-group');\r\n    }\r\n\r\n    createHtml() {\r\n        return `<div class=\"twcheese-scavenge-preferences-widget\">\r\n            <h3>Preferences</h3>\r\n            ${this.createTimingSectionHtml()}\r\n            <br/>\r\n            ${this.createOptionsSectionHtml()}\r\n            <br/>\r\n            <table style=\"width: 100%;\">\r\n                <tr>\r\n                    <td>${this.createTroopsSectionHtml()}</td>\r\n                    <td style=\"width: 20px;\"></td>\r\n                    <td>${this.createTroopsOrderSectionHtml()}</td>\r\n                </tr>\r\n            </table>\r\n        </div>`;\r\n    }\r\n\r\n    createTimingSectionHtml() {\r\n        let overallSeconds = this.preferences.targetDurationSeconds;\r\n        let hours = Math.floor(overallSeconds / 3600);\r\n        let minutes = String(Math.floor(overallSeconds / 60) % 60).padStart(2, '0');\r\n        let durationPattern = \"\\\\d+:\\\\d{2}\";\r\n\r\n        let mode = this.preferences.mode;\r\n        let modeSane = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON;\r\n        let modeAddict = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT;  \r\n        let modeEfficient = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_EFFICIENT;      \r\n        let checkSane = (mode === modeSane) ? 'checked' : '';\r\n        let checkAddict = (mode === modeAddict) ? 'checked' : '';\r\n        let checkEfficient = (mode === modeEfficient) ? 'checked' : '';\r\n\r\n        return `\r\n            <table class=\"vis timing-section\">\r\n                <tr><th>Timing</th></tr>\r\n                <tr>\r\n                    <td>\r\n                        Target duration:\r\n                        <input type=\"text\" class=\"target-duration\" value=\"${hours}:${minutes}\" placeholder=\"2:00\" required pattern=\"${durationPattern}\">\r\n                        hours:minutes\r\n                        <br/><span class=\"hint\">(Make sure they are home by 7am)</span>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"mode\" value=\"${modeSane}\" ${checkSane}>\r\n                            Max-out duration of best options first.\r\n                            <br/><span class=\"hint\">(recommended if you'll be afk)</span>\r\n                        </label>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"mode\" value=\"${modeEfficient}\" ${checkEfficient}>\r\n                            Split available troups.\r\n                            <br/><span class=\"hint\">(Most efficient if active enough)</span>\r\n                        </label>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"mode\" value=\"${modeAddict}\" ${checkAddict}>\r\n                            Aim for same duration across all options.\r\n                            <br/><span class=\"hint\">(recommended if you can immediately resend whenever)</span>\r\n                        </label>    \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        `;\r\n    }\r\n\r\n    createOptionsSectionHtml() {\r\n        let optionsArr = [...this.scavengeOptions.values()];\r\n\r\n        return `\r\n            <table class=\"vis options-section\">\r\n                <tr><th colspan=\"2\">Options to use</th></tr>\r\n                ${optionsArr.map(option => this.createOptionRowHtml(option)).join('')}\r\n            </table>\r\n        `;\r\n    }\r\n\r\n    createOptionRowHtml(option) {\r\n        let checked = '';\r\n        if (this.preferences.isOptionAllowed(option.id)) {\r\n            checked = 'checked';\r\n        }\r\n\r\n        return `<tr>\r\n            <td>\r\n                <label>\r\n                    <input type=\"checkbox\" ${checked} data-option-id=\"${option.id}\">\r\n                    <img src=\"${ImageSrc.scavengeOption(option.id)}\">\r\n                    <span>${option.getName()}</span>\r\n                </label>\r\n            </td>\r\n            <td>(${option.getLootPercent()}% carry capacity)</td>\r\n        </tr>`;\r\n    }\r\n\r\n    createTroopsSectionHtml() {\r\n        let helpTooltip = [\r\n            `Reserved troops won't be sent scavenging.`,\r\n            `<br/>`,\r\n            `<br/>Example:`,\r\n            ` :: You have 500 spears and 100 are reserved. At most, 400 spears would be sent scavenging.`\r\n        ].join('');\r\n\r\n        return `\r\n            <table class=\"vis troops-section\">\r\n                <tr>\r\n                    <th>Use</th>\r\n                    <th>Reserved <img src=\"${ImageSrc.info}\" title=\"${helpTooltip}\" class=\"tooltip info\"></th>\r\n                </tr>\r\n                ${this.sendableTroopTypes.map(type => this.createTroopRowHtml(type)).join('')}\r\n            </table>\r\n        `;\r\n    }\r\n\r\n    createTroopRowHtml(troopType) {\r\n        let checked = this.preferences.isTroopTypeAllowed(troopType) ? 'checked' : '';\r\n        let reservedCount = this.preferences.getReservedCount(troopType);\r\n        \r\n        return `<tr>\r\n            <td>\r\n                <input class=\"troop-allowed\" type=\"checkbox\" value=\"${troopType}\" ${checked}>\r\n                <img src=\"${ImageSrc.troopIcon(troopType)}\">\r\n            </td>\r\n            <td><input class=\"troop-reserved\" data-troop-type=\"${troopType}\" type=\"number\" min=\"0\" value=\"${reservedCount}\"></td>\r\n        </tr>`;\r\n    }\r\n\r\n    createTroopsOrderSectionHtml() {\r\n        let helpTooltip = [\r\n            `Troops in upper groups will be sent before troops in lower groups.`,\r\n            `<br/>`,\r\n            `<br/>Troops within the same group will be split proportionally by count available.`\r\n        ].join('');\r\n\r\n        return `\r\n            <table class=\"vis troop-order-section\">\r\n                <tr>\r\n                    <th>Order <img src=\"${ImageSrc.info}\" title=\"${helpTooltip}\" class=\"tooltip info\"></th>\r\n                </tr>\r\n                ${this.sendableTroopTypes.map(() => '<tr><td><div class=\"troop-group\"></div></td></tr>').join('')}\r\n            </table>\r\n        `;\r\n    }\r\n\r\n    initTroopOrder() {\r\n        for (let [i, chunk] of Object.entries(this.preferences.troopOrder)) {\r\n            let $group = this.$troopGroups.eq(i);\r\n            for (let troopType of chunk) {\r\n                if (!Troops_troopUtil.existsOnWorld(troopType)) { // todo: this is dirty. the preferences shouldn't be initialized with invalid troop types\r\n                    continue;\r\n                }\r\n                let $troopType = $(`<img class=\"troop\" draggable=\"true\" data-troop-type=\"${troopType}\" src=\"${ImageSrc.troopIcon(troopType)}\">`);\r\n                $group.append($troopType);\r\n            }\r\n        }\r\n\r\n        let $draggingTroop;\r\n\r\n        this.$troopGroups\r\n            .on('dragover', function(e) {\r\n                e.preventDefault(); // allows dropping\r\n            })\r\n            .on('dragenter', function(e) {\r\n                $(this).addClass('dragging-over');\r\n            })\r\n            .on('dragleave', function(e) {\r\n                $(this).removeClass('dragging-over');\r\n            })\r\n            .on('drop', function(e) {\r\n                e.preventDefault();\r\n                $(this).append($draggingTroop);\r\n                $(this).removeClass('dragging-over');\r\n                updateTroopOrderPreferences();\r\n            });\r\n\r\n        this.$troopGroups.find('.troop')\r\n            .on('dragstart', function(e) {\r\n                let dt = e.originalEvent.dataTransfer;\r\n                $draggingTroop = $(this);\r\n                dt.setDragImage($draggingTroop.clone()[0], 0, 0);\r\n                dt.dropEffect = 'move';\r\n                $draggingTroop.addClass('dragging');\r\n            })\r\n            .on('dragend', function(e) {\r\n                $draggingTroop.removeClass('dragging');\r\n                $draggingTroop = null;\r\n            });\r\n\r\n        let updateTroopOrderPreferences = () => {\r\n            let order = determineTroopOrder();\r\n            this.preferences.setTroopOrder(order);\r\n        }\r\n\r\n        let determineTroopOrder = () => {\r\n            let chunks = [];\r\n            this.$troopGroups.each(function() {\r\n                let $group = $(this);\r\n                let $troops = $group.find('.troop');\r\n                if ($troops.length < 1) {\r\n                    return;\r\n                }\r\n                let chunk = [];\r\n                $troops.each(function() {\r\n                    chunk.push($(this).data('troopType'));\r\n                });\r\n                chunks.push(chunk);\r\n            });            \r\n            return chunks;\r\n        }\r\n    }\r\n\r\n    watchSelf() {\r\n        let prefs = this.preferences;\r\n\r\n        this.$targetDuration.on('change', function() {\r\n            if (!this.checkValidity()) {\r\n                return;\r\n            }\r\n            let [, hours, minutes] = this.value.match(/(\\d+):(\\d+)/);\r\n\r\n            let durationSeconds = parseInt(hours)*3600 + parseInt(minutes)*60;\r\n            if (durationSeconds < 3600) {\r\n                this.setCustomValidity('must be at least 1 hour');\r\n                return;\r\n            } else {\r\n                this.setCustomValidity('');\r\n            }\r\n\r\n            prefs.setTargetDuration(durationSeconds);\r\n        });\r\n\r\n        this.$options.on('change', function() {\r\n            let $option = $(this);\r\n            prefs.setOptionAllowed($option.data('optionId'), $option.prop('checked'));\r\n        });\r\n\r\n        this.$modes.on('change', () => {\r\n            let mode = this.$modes.filter(':checked').val();\r\n            prefs.setMode(mode);\r\n        });\r\n\r\n        this.$troopsAllowed.on('change', function() {\r\n            let $this = $(this);\r\n            prefs.setTroopAllowed($this.val(), $this.prop('checked'));\r\n        });\r\n\r\n        this.$troopsReserved.on('input', function() {\r\n            if (!this.checkValidity()) {\r\n                return;\r\n            }\r\n            let count = parseInt(this.value) || 0;\r\n            prefs.setReservedCount(this.dataset.troopType, count);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\ninitCss(`\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section,\r\n    .twcheese-scavenge-preferences-widget .timing-section,\r\n    .twcheese-scavenge-preferences-widget .troops-section,\r\n    .twcheese-scavenge-preferences-widget .troop-order-section {\r\n        width: 100%;\r\n    }\r\n\r\n    \r\n    .twcheese-scavenge-preferences-widget .info {\r\n        width: 14px;\r\n        height: 14px;\r\n        vertical-align: middle;\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .target-duration {\r\n        width: 50px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .timing-section .hint {\r\n        font-size: x-small;\r\n        margin-left: 25px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .timing-section input[type='radio'] {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section td {\r\n        height: 22px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section input,\r\n    .twcheese-scavenge-preferences-widget .options-section span {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section img {\r\n        vertical-align: middle;\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section td,\r\n    .twcheese-scavenge-preferences-widget .troop-order-section td {\r\n        height: 26px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section td:first-child {\r\n        width: 45px;\r\n    }   \r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section img,\r\n    .twcheese-scavenge-preferences-widget .troops-section input {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-reserved {\r\n        width: 70px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-group {\r\n        position: relative;\r\n        border: 1px solid black;\r\n        border-radius: 3px;\r\n        height: 18px;\r\n        width: 176px;\r\n        padding: 3px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-group.dragging-over {\r\n        background-color: darkOrange;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop {\r\n        display: inline-block;\r\n        width: 18px;\r\n        height: 18px;\r\n        cursor: move;\r\n        margin: 0 3px;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop.dragging {\r\n        opacity: 0.1;\r\n    }\r\n    \r\n`);\r\n\r\n\n// EXTERNAL MODULE: ./src/Models/Debug/Build/ProcessFactory.js\nvar ProcessFactory = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./dist/tool/cfg/debug/ASS/Default.js\nlet processCfg = { phases: [{\"type\":\"PhaseQuestion\",\"internalName\":\"Entry\",\"questions\":[{\"type\":\"QuestionFreeForm\",\"ask\":\"What's broken?\",\"placeholderText\":\"e.g. \\\"it doesn't focus the Start button\\\"\",\"minResponseLength\":10}]}] };\r\n\r\n\n// CONCATENATED MODULE: ./src/ToolSetup/ASS.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialized = false;\r\nlet ASS_haulFactor, troopsAssigner, scavengeOptions;\r\n\r\nasync function useTool() {\r\n    if (!atScavengeScreen()) {\r\n        suggestRedirectToScavengeScreen();\r\n        return;\r\n    }\r\n\r\n    if (!initialized) {\r\n        await init();\r\n        initialized = true;\r\n    }\r\n\r\n    prepareBestOption();\r\n}\r\n\r\n\r\nasync function init() {\r\n    await ensureRemoteConfigsUpdated();\r\n\r\n    let models = scrapeScavengeModels(document);\r\n    troopsAssigner = new ScavengeTroopsAssigner_ScavengeTroopsAssigner(models.options, models.sendableTroopTypes, Troops_troopUtil);\r\n    ASS_haulFactor = models.haulFactor;\r\n\r\n    let exportedPreferences = userConfig.get('ASS.troopsAssigner');\r\n    if (exportedPreferences) {\r\n        troopsAssigner.preferences.import(exportedPreferences);\r\n    }\r\n    $(troopsAssigner.preferences).on('change', function() {\r\n        userConfig.set('ASS.troopsAssigner', troopsAssigner.preferences.export());\r\n    });\r\n    scavengeOptions = models.options;\r\n    insertPreferencesLauncher();\r\n\r\n    insertNarcissim();\r\n\r\n    initCss(`\r\n        .free_send_button:focus {\r\n            color: yellow;\r\n            box-shadow: 0 0 5px 3px yellow;\r\n        }\r\n    `);\r\n\r\n    afterScavengingStarted(() => prepareBestOption(false));\r\n}\r\n\r\n\r\nfunction atScavengeScreen() {\r\n    let here = document.location.href;\r\n    return here.includes('screen=place') && here.includes('mode=scavenge');\r\n}\r\n\r\n\r\nfunction suggestRedirectToScavengeScreen() {\r\n    suggestRedirect({\r\n        message: 'To use this, you must be at the scavenging screen.',\r\n        screen: 'place',\r\n        screenName: 'Scavenging Screen',\r\n        uriParams: {\r\n            mode: 'scavenge'\r\n        },\r\n        skippableId: 'Tool:ASS'\r\n    });\r\n}\r\n\r\n\r\nfunction insertPreferencesLauncher() {\r\n    let $launcher = $(`<a href=\"#\">&raquo; preferences</a>`)\r\n        .css({\r\n            fontSize: 'small',\r\n            marginLeft: '10px'\r\n        })\r\n        .on('click', function(e) {\r\n            e.preventDefault();\r\n            openPreferencesPopup();\r\n        });\r\n\r\n    $('#content_value').find('h3').eq(0).append($launcher);\r\n}\r\n\r\n\r\nfunction insertNarcissim() {\r\n    let $narcissism = $(`<span>Script created by <a href=\"https://forum.tribalwars.net/index.php?members/28484\">cheesasaurus</a></span>`)\r\n        .css({\r\n            float: 'right',\r\n            fontSize: 'xx-small',\r\n            fontWeight: 'normal'\r\n        });\r\n\r\n    $('#content_value').find('h3').eq(0).append($narcissism);\r\n}\r\n\r\n\r\nfunction openPreferencesPopup() {\r\n    let onClose = prepareBestOption;\r\n\r\n    Dialog.show('twcheese-scavenge-preferences-popup', function($container) {        \r\n        let widget = new ScavengePreferencesWidget_ScavengePreferencesWidget(troopsAssigner.preferences, scavengeOptions, troopsAssigner.sendableTroopTypes);\r\n        widget.appendTo($container);\r\n    }, onClose);\r\n}\r\n\r\n\r\nfunction prepareBestOption(informUserOfIssues = true) {\r\n    let usableOptionIds = scrapeUsableOptionIds(document);\r\n    usableOptionIds = troopsAssigner.adjustUsableOptionIds(usableOptionIds);\r\n    if (usableOptionIds.length < 1) {\r\n        if (informUserOfIssues) {\r\n            window.UI.ErrorMessage(`Can't scavenge right now because there's no usable options`);\r\n        }        \r\n        return;\r\n    }\r\n\r\n    let availableTroops = scrapeAvailableTroopCounts(document);\r\n    if (!troopsAssigner.areTroopsSufficient(availableTroops)) {\r\n        if (informUserOfIssues) {\r\n            window.UI.ErrorMessage(`Not enough troops available to scavenge right now`);\r\n        }\r\n        return;\r\n    }\r\n    \r\n    let assignedTroopsByOption = troopsAssigner.assignTroops(usableOptionIds, availableTroops, ASS_haulFactor);\r\n\r\n    let optionId = usableOptionIds[usableOptionIds.length - 1];\r\n    fillTroops(assignedTroopsByOption.get(optionId));\r\n    focusStartButton(optionId);\r\n}\r\n\r\n\r\nfunction focusStartButton(optionId) {\r\n    $('.free_send_button')[optionId - 1].focus();\r\n}\r\n\r\n\r\nfunction fillTroops(troopCounts) {\r\n    troopCounts.each(function(troopType, count) {\r\n        $(`.unitsInput[name='${troopType}']`)\r\n            .val(count)\r\n            .trigger('change');\r\n    });\r\n}\r\n\r\n\r\nfunction afterScavengingStarted(doSomething) {\r\n    let observer = new MutationObserver(function(mutations) {\r\n        mutations.forEach(function(mutation) {\r\n            let didScavengingStart = $(mutation.addedNodes).is('.active-view');\r\n            if (didScavengingStart) {\r\n                doSomething();\r\n            }\r\n        });\r\n    });\r\n    \r\n    $('.scavenge-option').each(function() {\r\n        observer.observe(this, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// register tool ///////////////////////////////////////////////////////\r\n\r\nlet processFactory = new ProcessFactory[\"a\" /* ProcessFactory */]({});\r\n\r\nfunction newDebugProcess() {\r\n    let name = 'Tool: Another Scavenging Script';\r\n    return processFactory.create(name, processCfg, true);\r\n}\r\n\r\n\r\nwindow.TwCheese.registerTool({\r\n    id: 'ASS',\r\n    use: useTool,\r\n    getDebugProcess: newDebugProcess\r\n});\n\n/***/ })\n/******/ ]);"]}